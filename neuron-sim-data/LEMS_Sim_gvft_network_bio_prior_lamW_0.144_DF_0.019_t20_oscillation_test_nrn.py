'''
Neuron simulator export for:

Components:
    null (Type: notes)
    null (Type: notes)
    LeakConductance (Type: ionChannelPassive:  conductance=1.0E-11 (SI conductance))
    AVAL (Type: cell)
    AVAR (Type: cell)
    AVKL (Type: cell)
    AVKR (Type: cell)
    RIS (Type: cell)
    RMDDL (Type: cell)
    RMDDR (Type: cell)
    RMDVL (Type: cell)
    RMDVR (Type: cell)
    SMBVL (Type: cell)
    SMBVR (Type: cell)
    URXL (Type: cell)
    URXR (Type: cell)
    MCL (Type: cell)
    I4 (Type: cell)
    M5 (Type: cell)
    I1L (Type: cell)
    NSMR (Type: cell)
    NSML (Type: cell)
    I2R (Type: cell)
    M4 (Type: cell)
    MCR (Type: cell)
    M3R (Type: cell)
    I6 (Type: cell)
    MI (Type: cell)
    I2L (Type: cell)
    I3 (Type: cell)
    M2R (Type: cell)
    M3L (Type: cell)
    I1R (Type: cell)
    M1 (Type: cell)
    I5 (Type: cell)
    M2L (Type: cell)
    null (Type: notes)
    Glutamate (Type: expTwoSynapse:  tauRise=0.001 (SI time) tauDecay=0.002 (SI time) peakTime=0.0013862943611198907 (SI time) waveformFactor=4.0 (dimensionless) gbase=1.0000000000000001E-11 (SI conductance) erev=0.0 (SI voltage))
    null (Type: notes)
    Acetylcholine (Type: expTwoSynapse:  tauRise=0.001 (SI time) tauDecay=0.002 (SI time) peakTime=0.0013862943611198907 (SI time) waveformFactor=4.0 (dimensionless) gbase=1.0000000000000001E-11 (SI conductance) erev=0.0 (SI voltage))
    null (Type: notes)
    Serotonin_Glutamate (Type: expTwoSynapse:  tauRise=0.001 (SI time) tauDecay=0.002 (SI time) peakTime=0.0013862943611198907 (SI time) waveformFactor=4.0 (dimensionless) gbase=1.0000000000000001E-11 (SI conductance) erev=0.0 (SI voltage))
    null (Type: notes)
    Generic_GJ (Type: gapJunction:  conductance=1.0000000000000002E-12 (SI conductance))
    gvft_network_bio_prior_lamW_0_144_DF_0_019_t20_net (Type: networkWithTemperature:  temperature=293.15 (SI temperature))
    i1l_stim (Type: pulseGenerator:  delay=0.05 (SI time) duration=0.4 (SI time) amplitude=5.0E-9 (SI current))
    i1r_stim (Type: pulseGenerator:  delay=0.05 (SI time) duration=0.4 (SI time) amplitude=5.0E-9 (SI current))
    i2l_stim (Type: pulseGenerator:  delay=0.05 (SI time) duration=0.4 (SI time) amplitude=5.0E-9 (SI current))
    i2r_stim (Type: pulseGenerator:  delay=0.05 (SI time) duration=0.4 (SI time) amplitude=5.0E-9 (SI current))
    input_i1l_stim (Type: inputList)
    input_i1r_stim (Type: inputList)
    input_i2l_stim (Type: inputList)
    input_i2r_stim (Type: inputList)
    Sim_gvft_network_bio_prior_lamW_0.144_DF_0.019_t20_oscillation_test (Type: Simulation:  length=0.5 (SI time) step=2.5E-5 (SI time))


    This NEURON file has been generated by org.neuroml.export (see https://github.com/NeuroML/org.neuroml.export)
         org.neuroml.export  v1.11.0
         org.neuroml.model   v1.11.0
         jLEMS               v0.12.0

'''

import neuron

import time
import datetime
import sys

import hashlib
h = neuron.h
h.load_file("nrngui.hoc")

h("objref p")
h("p = new PythonObject()")

class NeuronSimulation():

    def __init__(self, tstop, dt=None, seed=12345, abs_tol=None, rel_tol=None):

        print("\n    Starting simulation in NEURON of %sms generated from NeuroML2 model...\n"%tstop)

        self.setup_start = time.time()
        self.seed = seed
        self.abs_tol = abs_tol
        self.rel_tol = rel_tol
        self.randoms = []
        self.next_global_id = 0  # Used in Random123 classes for elements using random(), etc. 

        self.next_spiking_input_id = 0  # Used in Random123 classes for elements using random(), etc. 

        '''
        Adding simulation Component(id=Sim_gvft_network_bio_prior_lamW_0.144_DF_0.019_t20_oscillation_test type=Simulation) of network/component: gvft_network_bio_prior_lamW_0_144_DF_0_019_t20_net (Type: networkWithTemperature:  temperature=293.15 (SI temperature))
        
        '''

        # Temperature used for network: 293.15 K
        h.celsius = 293.15 - 273.15

        # ######################   Population: M1
        print("Population M1 contains 1 instance(s) of component: M1 of type: cell")

        h.load_file("M1.hoc")
        a_M1 = []
        h("{ n_M1 = 1 }")
        h("objectvar a_M1[n_M1]")
        for i in range(int(h.n_M1)):
            h("a_M1[%i] = new M1()"%i)
            h("access a_M1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M1[0].position(0.53768843, 0.28643218, 0.0) }")

        h("proc initialiseV_M1() { for i = 0, n_M1-1 { a_M1[i].set_initial_v() } }")
        h("objref fih_M1")
        h('{fih_M1 = new FInitializeHandler(0, "initialiseV_M1()")}')

        h("proc initialiseIons_M1() { for i = 0, n_M1-1 { a_M1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M1")
        h('{fih_ion_M1 = new FInitializeHandler(1, "initialiseIons_M1()")}')

        # ######################   Population: M2L
        print("Population M2L contains 1 instance(s) of component: M2L of type: cell")

        h.load_file("M2L.hoc")
        a_M2L = []
        h("{ n_M2L = 1 }")
        h("objectvar a_M2L[n_M2L]")
        for i in range(int(h.n_M2L)):
            h("a_M2L[%i] = new M2L()"%i)
            h("access a_M2L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M2L[0].position(0.9798995, 0.919598, 0.0) }")

        h("proc initialiseV_M2L() { for i = 0, n_M2L-1 { a_M2L[i].set_initial_v() } }")
        h("objref fih_M2L")
        h('{fih_M2L = new FInitializeHandler(0, "initialiseV_M2L()")}')

        h("proc initialiseIons_M2L() { for i = 0, n_M2L-1 { a_M2L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M2L")
        h('{fih_ion_M2L = new FInitializeHandler(1, "initialiseIons_M2L()")}')

        # ######################   Population: M2R
        print("Population M2R contains 1 instance(s) of component: M2R of type: cell")

        h.load_file("M2R.hoc")
        a_M2R = []
        h("{ n_M2R = 1 }")
        h("objectvar a_M2R[n_M2R]")
        for i in range(int(h.n_M2R)):
            h("a_M2R[%i] = new M2R()"%i)
            h("access a_M2R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M2R[0].position(0.12562814, 1.0, 0.0) }")

        h("proc initialiseV_M2R() { for i = 0, n_M2R-1 { a_M2R[i].set_initial_v() } }")
        h("objref fih_M2R")
        h('{fih_M2R = new FInitializeHandler(0, "initialiseV_M2R()")}')

        h("proc initialiseIons_M2R() { for i = 0, n_M2R-1 { a_M2R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M2R")
        h('{fih_ion_M2R = new FInitializeHandler(1, "initialiseIons_M2R()")}')

        # ######################   Population: M3L
        print("Population M3L contains 1 instance(s) of component: M3L of type: cell")

        h.load_file("M3L.hoc")
        a_M3L = []
        h("{ n_M3L = 1 }")
        h("objectvar a_M3L[n_M3L]")
        for i in range(int(h.n_M3L)):
            h("a_M3L[%i] = new M3L()"%i)
            h("access a_M3L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M3L[0].position(0.03517589, 0.0753769, 0.0) }")

        h("proc initialiseV_M3L() { for i = 0, n_M3L-1 { a_M3L[i].set_initial_v() } }")
        h("objref fih_M3L")
        h('{fih_M3L = new FInitializeHandler(0, "initialiseV_M3L()")}')

        h("proc initialiseIons_M3L() { for i = 0, n_M3L-1 { a_M3L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M3L")
        h('{fih_ion_M3L = new FInitializeHandler(1, "initialiseIons_M3L()")}')

        # ######################   Population: M3R
        print("Population M3R contains 1 instance(s) of component: M3R of type: cell")

        h.load_file("M3R.hoc")
        a_M3R = []
        h("{ n_M3R = 1 }")
        h("objectvar a_M3R[n_M3R]")
        for i in range(int(h.n_M3R)):
            h("a_M3R[%i] = new M3R()"%i)
            h("access a_M3R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M3R[0].position(-0.3266332, -0.1155779, 0.0) }")

        h("proc initialiseV_M3R() { for i = 0, n_M3R-1 { a_M3R[i].set_initial_v() } }")
        h("objref fih_M3R")
        h('{fih_M3R = new FInitializeHandler(0, "initialiseV_M3R()")}')

        h("proc initialiseIons_M3R() { for i = 0, n_M3R-1 { a_M3R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M3R")
        h('{fih_ion_M3R = new FInitializeHandler(1, "initialiseIons_M3R()")}')

        # ######################   Population: M4
        print("Population M4 contains 1 instance(s) of component: M4 of type: cell")

        h.load_file("M4.hoc")
        a_M4 = []
        h("{ n_M4 = 1 }")
        h("objectvar a_M4[n_M4]")
        for i in range(int(h.n_M4)):
            h("a_M4[%i] = new M4()"%i)
            h("access a_M4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M4[0].position(0.025125638, 0.98994976, 0.0) }")

        h("proc initialiseV_M4() { for i = 0, n_M4-1 { a_M4[i].set_initial_v() } }")
        h("objref fih_M4")
        h('{fih_M4 = new FInitializeHandler(0, "initialiseV_M4()")}')

        h("proc initialiseIons_M4() { for i = 0, n_M4-1 { a_M4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M4")
        h('{fih_ion_M4 = new FInitializeHandler(1, "initialiseIons_M4()")}')

        # ######################   Population: M5
        print("Population M5 contains 1 instance(s) of component: M5 of type: cell")

        h.load_file("M5.hoc")
        a_M5 = []
        h("{ n_M5 = 1 }")
        h("objectvar a_M5[n_M5]")
        for i in range(int(h.n_M5)):
            h("a_M5[%i] = new M5()"%i)
            h("access a_M5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M5[0].position(0.7889447, -0.015075387, 0.0) }")

        h("proc initialiseV_M5() { for i = 0, n_M5-1 { a_M5[i].set_initial_v() } }")
        h("objref fih_M5")
        h('{fih_M5 = new FInitializeHandler(0, "initialiseV_M5()")}')

        h("proc initialiseIons_M5() { for i = 0, n_M5-1 { a_M5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M5")
        h('{fih_ion_M5 = new FInitializeHandler(1, "initialiseIons_M5()")}')

        # ######################   Population: I1L
        print("Population I1L contains 1 instance(s) of component: I1L of type: cell")

        h.load_file("I1L.hoc")
        a_I1L = []
        h("{ n_I1L = 1 }")
        h("objectvar a_I1L[n_I1L]")
        for i in range(int(h.n_I1L)):
            h("a_I1L[%i] = new I1L()"%i)
            h("access a_I1L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I1L[0].position(-0.7788945, -0.40703517, 0.0) }")

        h("proc initialiseV_I1L() { for i = 0, n_I1L-1 { a_I1L[i].set_initial_v() } }")
        h("objref fih_I1L")
        h('{fih_I1L = new FInitializeHandler(0, "initialiseV_I1L()")}')

        h("proc initialiseIons_I1L() { for i = 0, n_I1L-1 { a_I1L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I1L")
        h('{fih_ion_I1L = new FInitializeHandler(1, "initialiseIons_I1L()")}')

        # ######################   Population: I1R
        print("Population I1R contains 1 instance(s) of component: I1R of type: cell")

        h.load_file("I1R.hoc")
        a_I1R = []
        h("{ n_I1R = 1 }")
        h("objectvar a_I1R[n_I1R]")
        for i in range(int(h.n_I1R)):
            h("a_I1R[%i] = new I1R()"%i)
            h("access a_I1R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I1R[0].position(-0.8492462, -0.025125638, 0.0) }")

        h("proc initialiseV_I1R() { for i = 0, n_I1R-1 { a_I1R[i].set_initial_v() } }")
        h("objref fih_I1R")
        h('{fih_I1R = new FInitializeHandler(0, "initialiseV_I1R()")}')

        h("proc initialiseIons_I1R() { for i = 0, n_I1R-1 { a_I1R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I1R")
        h('{fih_ion_I1R = new FInitializeHandler(1, "initialiseIons_I1R()")}')

        # ######################   Population: I2L
        print("Population I2L contains 1 instance(s) of component: I2L of type: cell")

        h.load_file("I2L.hoc")
        a_I2L = []
        h("{ n_I2L = 1 }")
        h("objectvar a_I2L[n_I2L]")
        for i in range(int(h.n_I2L)):
            h("a_I2L[%i] = new I2L()"%i)
            h("access a_I2L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I2L[0].position(-0.20603016, 0.8994975, 0.0) }")

        h("proc initialiseV_I2L() { for i = 0, n_I2L-1 { a_I2L[i].set_initial_v() } }")
        h("objref fih_I2L")
        h('{fih_I2L = new FInitializeHandler(0, "initialiseV_I2L()")}')

        h("proc initialiseIons_I2L() { for i = 0, n_I2L-1 { a_I2L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I2L")
        h('{fih_ion_I2L = new FInitializeHandler(1, "initialiseIons_I2L()")}')

        # ######################   Population: I2R
        print("Population I2R contains 1 instance(s) of component: I2R of type: cell")

        h.load_file("I2R.hoc")
        a_I2R = []
        h("{ n_I2R = 1 }")
        h("objectvar a_I2R[n_I2R]")
        for i in range(int(h.n_I2R)):
            h("a_I2R[%i] = new I2R()"%i)
            h("access a_I2R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I2R[0].position(-0.7085427, 0.9396985, 0.0) }")

        h("proc initialiseV_I2R() { for i = 0, n_I2R-1 { a_I2R[i].set_initial_v() } }")
        h("objref fih_I2R")
        h('{fih_I2R = new FInitializeHandler(0, "initialiseV_I2R()")}')

        h("proc initialiseIons_I2R() { for i = 0, n_I2R-1 { a_I2R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I2R")
        h('{fih_ion_I2R = new FInitializeHandler(1, "initialiseIons_I2R()")}')

        # ######################   Population: I3
        print("Population I3 contains 1 instance(s) of component: I3 of type: cell")

        h.load_file("I3.hoc")
        a_I3 = []
        h("{ n_I3 = 1 }")
        h("objectvar a_I3[n_I3]")
        for i in range(int(h.n_I3)):
            h("a_I3[%i] = new I3()"%i)
            h("access a_I3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I3[0].position(-0.83919597, 0.45728645, 0.0) }")

        h("proc initialiseV_I3() { for i = 0, n_I3-1 { a_I3[i].set_initial_v() } }")
        h("objref fih_I3")
        h('{fih_I3 = new FInitializeHandler(0, "initialiseV_I3()")}')

        h("proc initialiseIons_I3() { for i = 0, n_I3-1 { a_I3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I3")
        h('{fih_ion_I3 = new FInitializeHandler(1, "initialiseIons_I3()")}')

        # ######################   Population: I4
        print("Population I4 contains 1 instance(s) of component: I4 of type: cell")

        h.load_file("I4.hoc")
        a_I4 = []
        h("{ n_I4 = 1 }")
        h("objectvar a_I4[n_I4]")
        for i in range(int(h.n_I4)):
            h("a_I4[%i] = new I4()"%i)
            h("access a_I4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I4[0].position(0.51758796, 0.65829146, 0.0) }")

        h("proc initialiseV_I4() { for i = 0, n_I4-1 { a_I4[i].set_initial_v() } }")
        h("objref fih_I4")
        h('{fih_I4 = new FInitializeHandler(0, "initialiseV_I4()")}')

        h("proc initialiseIons_I4() { for i = 0, n_I4-1 { a_I4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I4")
        h('{fih_ion_I4 = new FInitializeHandler(1, "initialiseIons_I4()")}')

        # ######################   Population: I5
        print("Population I5 contains 1 instance(s) of component: I5 of type: cell")

        h.load_file("I5.hoc")
        a_I5 = []
        h("{ n_I5 = 1 }")
        h("objectvar a_I5[n_I5]")
        for i in range(int(h.n_I5)):
            h("a_I5[%i] = new I5()"%i)
            h("access a_I5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I5[0].position(0.6281407, 0.46733668, 0.0) }")

        h("proc initialiseV_I5() { for i = 0, n_I5-1 { a_I5[i].set_initial_v() } }")
        h("objref fih_I5")
        h('{fih_I5 = new FInitializeHandler(0, "initialiseV_I5()")}')

        h("proc initialiseIons_I5() { for i = 0, n_I5-1 { a_I5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I5")
        h('{fih_ion_I5 = new FInitializeHandler(1, "initialiseIons_I5()")}')

        # ######################   Population: I6
        print("Population I6 contains 1 instance(s) of component: I6 of type: cell")

        h.load_file("I6.hoc")
        a_I6 = []
        h("{ n_I6 = 1 }")
        h("objectvar a_I6[n_I6]")
        for i in range(int(h.n_I6)):
            h("a_I6[%i] = new I6()"%i)
            h("access a_I6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I6[0].position(0.7889447, -0.65829146, 0.0) }")

        h("proc initialiseV_I6() { for i = 0, n_I6-1 { a_I6[i].set_initial_v() } }")
        h("objref fih_I6")
        h('{fih_I6 = new FInitializeHandler(0, "initialiseV_I6()")}')

        h("proc initialiseIons_I6() { for i = 0, n_I6-1 { a_I6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I6")
        h('{fih_ion_I6 = new FInitializeHandler(1, "initialiseIons_I6()")}')

        # ######################   Population: MCL
        print("Population MCL contains 1 instance(s) of component: MCL of type: cell")

        h.load_file("MCL.hoc")
        a_MCL = []
        h("{ n_MCL = 1 }")
        h("objectvar a_MCL[n_MCL]")
        for i in range(int(h.n_MCL)):
            h("a_MCL[%i] = new MCL()"%i)
            h("access a_MCL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_MCL[0].position(0.055276394, -0.23618092, 0.0) }")

        h("proc initialiseV_MCL() { for i = 0, n_MCL-1 { a_MCL[i].set_initial_v() } }")
        h("objref fih_MCL")
        h('{fih_MCL = new FInitializeHandler(0, "initialiseV_MCL()")}')

        h("proc initialiseIons_MCL() { for i = 0, n_MCL-1 { a_MCL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_MCL")
        h('{fih_ion_MCL = new FInitializeHandler(1, "initialiseIons_MCL()")}')

        # ######################   Population: MCR
        print("Population MCR contains 1 instance(s) of component: MCR of type: cell")

        h.load_file("MCR.hoc")
        a_MCR = []
        h("{ n_MCR = 1 }")
        h("objectvar a_MCR[n_MCR]")
        for i in range(int(h.n_MCR)):
            h("a_MCR[%i] = new MCR()"%i)
            h("access a_MCR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_MCR[0].position(-0.8291457, -0.0050251363, 0.0) }")

        h("proc initialiseV_MCR() { for i = 0, n_MCR-1 { a_MCR[i].set_initial_v() } }")
        h("objref fih_MCR")
        h('{fih_MCR = new FInitializeHandler(0, "initialiseV_MCR()")}')

        h("proc initialiseIons_MCR() { for i = 0, n_MCR-1 { a_MCR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_MCR")
        h('{fih_ion_MCR = new FInitializeHandler(1, "initialiseIons_MCR()")}')

        # ######################   Population: MI
        print("Population MI contains 1 instance(s) of component: MI of type: cell")

        h.load_file("MI.hoc")
        a_MI = []
        h("{ n_MI = 1 }")
        h("objectvar a_MI[n_MI]")
        for i in range(int(h.n_MI)):
            h("a_MI[%i] = new MI()"%i)
            h("access a_MI[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_MI[0].position(-0.43718594, 0.04522614, 0.0) }")

        h("proc initialiseV_MI() { for i = 0, n_MI-1 { a_MI[i].set_initial_v() } }")
        h("objref fih_MI")
        h('{fih_MI = new FInitializeHandler(0, "initialiseV_MI()")}')

        h("proc initialiseIons_MI() { for i = 0, n_MI-1 { a_MI[i].set_initial_ion_properties() } }")
        h("objref fih_ion_MI")
        h('{fih_ion_MI = new FInitializeHandler(1, "initialiseIons_MI()")}')

        # ######################   Population: NSML
        print("Population NSML contains 1 instance(s) of component: NSML of type: cell")

        h.load_file("NSML.hoc")
        a_NSML = []
        h("{ n_NSML = 1 }")
        h("objectvar a_NSML[n_NSML]")
        for i in range(int(h.n_NSML)):
            h("a_NSML[%i] = new NSML()"%i)
            h("access a_NSML[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_NSML[0].position(-0.055276394, 0.2763819, 0.0) }")

        h("proc initialiseV_NSML() { for i = 0, n_NSML-1 { a_NSML[i].set_initial_v() } }")
        h("objref fih_NSML")
        h('{fih_NSML = new FInitializeHandler(0, "initialiseV_NSML()")}')

        h("proc initialiseIons_NSML() { for i = 0, n_NSML-1 { a_NSML[i].set_initial_ion_properties() } }")
        h("objref fih_ion_NSML")
        h('{fih_ion_NSML = new FInitializeHandler(1, "initialiseIons_NSML()")}')

        # ######################   Population: NSMR
        print("Population NSMR contains 1 instance(s) of component: NSMR of type: cell")

        h.load_file("NSMR.hoc")
        a_NSMR = []
        h("{ n_NSMR = 1 }")
        h("objectvar a_NSMR[n_NSMR]")
        for i in range(int(h.n_NSMR)):
            h("a_NSMR[%i] = new NSMR()"%i)
            h("access a_NSMR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_NSMR[0].position(-0.19597991, -0.08542714, 0.0) }")

        h("proc initialiseV_NSMR() { for i = 0, n_NSMR-1 { a_NSMR[i].set_initial_v() } }")
        h("objref fih_NSMR")
        h('{fih_NSMR = new FInitializeHandler(0, "initialiseV_NSMR()")}')

        h("proc initialiseIons_NSMR() { for i = 0, n_NSMR-1 { a_NSMR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_NSMR")
        h('{fih_ion_NSMR = new FInitializeHandler(1, "initialiseIons_NSMR()")}')

        # ######################   Population: AVAL
        print("Population AVAL contains 1 instance(s) of component: AVAL of type: cell")

        h.load_file("AVAL.hoc")
        a_AVAL = []
        h("{ n_AVAL = 1 }")
        h("objectvar a_AVAL[n_AVAL]")
        for i in range(int(h.n_AVAL)):
            h("a_AVAL[%i] = new AVAL()"%i)
            h("access a_AVAL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVAL[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_AVAL() { for i = 0, n_AVAL-1 { a_AVAL[i].set_initial_v() } }")
        h("objref fih_AVAL")
        h('{fih_AVAL = new FInitializeHandler(0, "initialiseV_AVAL()")}')

        h("proc initialiseIons_AVAL() { for i = 0, n_AVAL-1 { a_AVAL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVAL")
        h('{fih_ion_AVAL = new FInitializeHandler(1, "initialiseIons_AVAL()")}')

        # ######################   Population: AVAR
        print("Population AVAR contains 1 instance(s) of component: AVAR of type: cell")

        h.load_file("AVAR.hoc")
        a_AVAR = []
        h("{ n_AVAR = 1 }")
        h("objectvar a_AVAR[n_AVAR]")
        for i in range(int(h.n_AVAR)):
            h("a_AVAR[%i] = new AVAR()"%i)
            h("access a_AVAR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVAR[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_AVAR() { for i = 0, n_AVAR-1 { a_AVAR[i].set_initial_v() } }")
        h("objref fih_AVAR")
        h('{fih_AVAR = new FInitializeHandler(0, "initialiseV_AVAR()")}')

        h("proc initialiseIons_AVAR() { for i = 0, n_AVAR-1 { a_AVAR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVAR")
        h('{fih_ion_AVAR = new FInitializeHandler(1, "initialiseIons_AVAR()")}')

        # ######################   Population: AVKL
        print("Population AVKL contains 1 instance(s) of component: AVKL of type: cell")

        h.load_file("AVKL.hoc")
        a_AVKL = []
        h("{ n_AVKL = 1 }")
        h("objectvar a_AVKL[n_AVKL]")
        for i in range(int(h.n_AVKL)):
            h("a_AVKL[%i] = new AVKL()"%i)
            h("access a_AVKL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVKL[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_AVKL() { for i = 0, n_AVKL-1 { a_AVKL[i].set_initial_v() } }")
        h("objref fih_AVKL")
        h('{fih_AVKL = new FInitializeHandler(0, "initialiseV_AVKL()")}')

        h("proc initialiseIons_AVKL() { for i = 0, n_AVKL-1 { a_AVKL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVKL")
        h('{fih_ion_AVKL = new FInitializeHandler(1, "initialiseIons_AVKL()")}')

        # ######################   Population: AVKR
        print("Population AVKR contains 1 instance(s) of component: AVKR of type: cell")

        h.load_file("AVKR.hoc")
        a_AVKR = []
        h("{ n_AVKR = 1 }")
        h("objectvar a_AVKR[n_AVKR]")
        for i in range(int(h.n_AVKR)):
            h("a_AVKR[%i] = new AVKR()"%i)
            h("access a_AVKR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVKR[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_AVKR() { for i = 0, n_AVKR-1 { a_AVKR[i].set_initial_v() } }")
        h("objref fih_AVKR")
        h('{fih_AVKR = new FInitializeHandler(0, "initialiseV_AVKR()")}')

        h("proc initialiseIons_AVKR() { for i = 0, n_AVKR-1 { a_AVKR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVKR")
        h('{fih_ion_AVKR = new FInitializeHandler(1, "initialiseIons_AVKR()")}')

        # ######################   Population: RIS
        print("Population RIS contains 1 instance(s) of component: RIS of type: cell")

        h.load_file("RIS.hoc")
        a_RIS = []
        h("{ n_RIS = 1 }")
        h("objectvar a_RIS[n_RIS]")
        for i in range(int(h.n_RIS)):
            h("a_RIS[%i] = new RIS()"%i)
            h("access a_RIS[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIS[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_RIS() { for i = 0, n_RIS-1 { a_RIS[i].set_initial_v() } }")
        h("objref fih_RIS")
        h('{fih_RIS = new FInitializeHandler(0, "initialiseV_RIS()")}')

        h("proc initialiseIons_RIS() { for i = 0, n_RIS-1 { a_RIS[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIS")
        h('{fih_ion_RIS = new FInitializeHandler(1, "initialiseIons_RIS()")}')

        # ######################   Population: RMDDL
        print("Population RMDDL contains 1 instance(s) of component: RMDDL of type: cell")

        h.load_file("RMDDL.hoc")
        a_RMDDL = []
        h("{ n_RMDDL = 1 }")
        h("objectvar a_RMDDL[n_RMDDL]")
        for i in range(int(h.n_RMDDL)):
            h("a_RMDDL[%i] = new RMDDL()"%i)
            h("access a_RMDDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDDL[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDDL() { for i = 0, n_RMDDL-1 { a_RMDDL[i].set_initial_v() } }")
        h("objref fih_RMDDL")
        h('{fih_RMDDL = new FInitializeHandler(0, "initialiseV_RMDDL()")}')

        h("proc initialiseIons_RMDDL() { for i = 0, n_RMDDL-1 { a_RMDDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDDL")
        h('{fih_ion_RMDDL = new FInitializeHandler(1, "initialiseIons_RMDDL()")}')

        # ######################   Population: RMDDR
        print("Population RMDDR contains 1 instance(s) of component: RMDDR of type: cell")

        h.load_file("RMDDR.hoc")
        a_RMDDR = []
        h("{ n_RMDDR = 1 }")
        h("objectvar a_RMDDR[n_RMDDR]")
        for i in range(int(h.n_RMDDR)):
            h("a_RMDDR[%i] = new RMDDR()"%i)
            h("access a_RMDDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDDR[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDDR() { for i = 0, n_RMDDR-1 { a_RMDDR[i].set_initial_v() } }")
        h("objref fih_RMDDR")
        h('{fih_RMDDR = new FInitializeHandler(0, "initialiseV_RMDDR()")}')

        h("proc initialiseIons_RMDDR() { for i = 0, n_RMDDR-1 { a_RMDDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDDR")
        h('{fih_ion_RMDDR = new FInitializeHandler(1, "initialiseIons_RMDDR()")}')

        # ######################   Population: RMDVL
        print("Population RMDVL contains 1 instance(s) of component: RMDVL of type: cell")

        h.load_file("RMDVL.hoc")
        a_RMDVL = []
        h("{ n_RMDVL = 1 }")
        h("objectvar a_RMDVL[n_RMDVL]")
        for i in range(int(h.n_RMDVL)):
            h("a_RMDVL[%i] = new RMDVL()"%i)
            h("access a_RMDVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDVL[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDVL() { for i = 0, n_RMDVL-1 { a_RMDVL[i].set_initial_v() } }")
        h("objref fih_RMDVL")
        h('{fih_RMDVL = new FInitializeHandler(0, "initialiseV_RMDVL()")}')

        h("proc initialiseIons_RMDVL() { for i = 0, n_RMDVL-1 { a_RMDVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDVL")
        h('{fih_ion_RMDVL = new FInitializeHandler(1, "initialiseIons_RMDVL()")}')

        # ######################   Population: RMDVR
        print("Population RMDVR contains 1 instance(s) of component: RMDVR of type: cell")

        h.load_file("RMDVR.hoc")
        a_RMDVR = []
        h("{ n_RMDVR = 1 }")
        h("objectvar a_RMDVR[n_RMDVR]")
        for i in range(int(h.n_RMDVR)):
            h("a_RMDVR[%i] = new RMDVR()"%i)
            h("access a_RMDVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDVR[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDVR() { for i = 0, n_RMDVR-1 { a_RMDVR[i].set_initial_v() } }")
        h("objref fih_RMDVR")
        h('{fih_RMDVR = new FInitializeHandler(0, "initialiseV_RMDVR()")}')

        h("proc initialiseIons_RMDVR() { for i = 0, n_RMDVR-1 { a_RMDVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDVR")
        h('{fih_ion_RMDVR = new FInitializeHandler(1, "initialiseIons_RMDVR()")}')

        # ######################   Population: SMBVL
        print("Population SMBVL contains 1 instance(s) of component: SMBVL of type: cell")

        h.load_file("SMBVL.hoc")
        a_SMBVL = []
        h("{ n_SMBVL = 1 }")
        h("objectvar a_SMBVL[n_SMBVL]")
        for i in range(int(h.n_SMBVL)):
            h("a_SMBVL[%i] = new SMBVL()"%i)
            h("access a_SMBVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMBVL[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_SMBVL() { for i = 0, n_SMBVL-1 { a_SMBVL[i].set_initial_v() } }")
        h("objref fih_SMBVL")
        h('{fih_SMBVL = new FInitializeHandler(0, "initialiseV_SMBVL()")}')

        h("proc initialiseIons_SMBVL() { for i = 0, n_SMBVL-1 { a_SMBVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMBVL")
        h('{fih_ion_SMBVL = new FInitializeHandler(1, "initialiseIons_SMBVL()")}')

        # ######################   Population: SMBVR
        print("Population SMBVR contains 1 instance(s) of component: SMBVR of type: cell")

        h.load_file("SMBVR.hoc")
        a_SMBVR = []
        h("{ n_SMBVR = 1 }")
        h("objectvar a_SMBVR[n_SMBVR]")
        for i in range(int(h.n_SMBVR)):
            h("a_SMBVR[%i] = new SMBVR()"%i)
            h("access a_SMBVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMBVR[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_SMBVR() { for i = 0, n_SMBVR-1 { a_SMBVR[i].set_initial_v() } }")
        h("objref fih_SMBVR")
        h('{fih_SMBVR = new FInitializeHandler(0, "initialiseV_SMBVR()")}')

        h("proc initialiseIons_SMBVR() { for i = 0, n_SMBVR-1 { a_SMBVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMBVR")
        h('{fih_ion_SMBVR = new FInitializeHandler(1, "initialiseIons_SMBVR()")}')

        # ######################   Population: URXL
        print("Population URXL contains 1 instance(s) of component: URXL of type: cell")

        h.load_file("URXL.hoc")
        a_URXL = []
        h("{ n_URXL = 1 }")
        h("objectvar a_URXL[n_URXL]")
        for i in range(int(h.n_URXL)):
            h("a_URXL[%i] = new URXL()"%i)
            h("access a_URXL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URXL[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_URXL() { for i = 0, n_URXL-1 { a_URXL[i].set_initial_v() } }")
        h("objref fih_URXL")
        h('{fih_URXL = new FInitializeHandler(0, "initialiseV_URXL()")}')

        h("proc initialiseIons_URXL() { for i = 0, n_URXL-1 { a_URXL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URXL")
        h('{fih_ion_URXL = new FInitializeHandler(1, "initialiseIons_URXL()")}')

        # ######################   Population: URXR
        print("Population URXR contains 1 instance(s) of component: URXR of type: cell")

        h.load_file("URXR.hoc")
        a_URXR = []
        h("{ n_URXR = 1 }")
        h("objectvar a_URXR[n_URXR]")
        for i in range(int(h.n_URXR)):
            h("a_URXR[%i] = new URXR()"%i)
            h("access a_URXR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URXR[0].position(5.0, 0.0, 0.0) }")

        h("proc initialiseV_URXR() { for i = 0, n_URXR-1 { a_URXR[i].set_initial_v() } }")
        h("objref fih_URXR")
        h('{fih_URXR = new FInitializeHandler(0, "initialiseV_URXR()")}')

        h("proc initialiseIons_URXR() { for i = 0, n_URXR-1 { a_URXR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URXR")
        h('{fih_ion_URXR = new FInitializeHandler(1, "initialiseIons_URXR()")}')

        # ######################   Projection: NCXLS_MCR_I1R
        print("Adding projection: NCXLS_MCR_I1R, from MCR to I1R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_MCR_I1R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_MCR_I1R_Acetylcholine[1]")

        # Connection 0: cell 0, seg 8 (0.8218601) [0.7774865 on a_MCR[0].Axon] -> cell 0, seg 9 (0.7062422) [0.43142965 on a_I1R[0].Axon], weight: 1.0, delay 0.0
        h("a_I1R[0].Axon syn_NCXLS_MCR_I1R_Acetylcholine[0] = new Acetylcholine(0.43142965)")
        h("a_MCR[0].Axon a_I1R[0].synlist.append(new NetCon(&v(0.7774865), syn_NCXLS_MCR_I1R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_MCR_I1L
        print("Adding projection: NCXLS_MCR_I1L, from MCR to I1L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_MCR_I1L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_MCR_I1L_Acetylcholine[1]")

        # Connection 1: cell 0, seg 5 (0.23322807) [0.3844843 on a_MCR[0].Axon] -> cell 0, seg 5 (0.58130544) [0.28763285 on a_I1L[0].Axon], weight: 1.0, delay 0.0
        h("a_I1L[0].Axon syn_NCXLS_MCR_I1L_Acetylcholine[0] = new Acetylcholine(0.28763285)")
        h("a_MCR[0].Axon a_I1L[0].synlist.append(new NetCon(&v(0.3844843), syn_NCXLS_MCR_I1L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3L_I2L
        print("Adding projection: NCXLS_M3L_I2L, from M3L to I2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_I2L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3L_I2L_Acetylcholine[1]")

        # Connection 2: cell 0, seg 1 (0.8127996) [0.02463735 on a_M3L[0].Axon] -> cell 0, seg 6 (0.9472486) [0.585924 on a_I2L[0].Axon], weight: 1.0, delay 0.0
        h("a_I2L[0].Axon syn_NCXLS_M3L_I2L_Acetylcholine[0] = new Acetylcholine(0.585924)")
        h("a_M3L[0].Axon a_I2L[0].synlist.append(new NetCon(&v(0.02463735), syn_NCXLS_M3L_I2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3L_I5
        print("Adding projection: NCXLS_M3L_I5, from M3L to I5 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_I5_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3L_I5_Acetylcholine[1]")

        # Connection 3: cell 0, seg 9 (0.35021824) [0.50492364 on a_M3L[0].Neurite3] -> cell 0, seg 4 (0.7081812) [0.0058079897 on a_I5[0].Neurite2], weight: 1.0, delay 0.0
        h("a_I5[0].Neurite2 syn_NCXLS_M3L_I5_Acetylcholine[0] = new Acetylcholine(0.0058079897)")
        h("a_M3L[0].Neurite3 a_I5[0].synlist.append(new NetCon(&v(0.50492364), syn_NCXLS_M3L_I5_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3L_M5
        print("Adding projection: NCXLS_M3L_M5, from M3L to M5 with synapse Glutamate, 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_M5_Glutamate[1]")

        h("objectvar netConn_NCXLS_M3L_M5_Glutamate[1]")

        # Connection 4: cell 0, seg 3 (0.7050844) [0.44726378 on a_M3L[0].Axon] -> cell 0, seg 6 (0.24872415) [0.35636613 on a_M5[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_M5[0].Dendrite2 syn_NCXLS_M3L_M5_Glutamate[0] = new Glutamate(0.35636613)")
        h("a_M3L[0].Axon a_M5[0].synlist.append(new NetCon(&v(0.44726378), syn_NCXLS_M3L_M5_Glutamate[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3L_NSML
        print("Adding projection: NCXLS_M3L_NSML, from M3L to NSML with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_NSML_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3L_NSML_Acetylcholine[1]")

        # Connection 5: cell 0, seg 3 (0.43445185) [0.35355204 on a_M3L[0].Axon] -> cell 0, seg 7 (0.25368217) [0.0848879 on a_NSML[0].Neurite2], weight: 1.0, delay 0.0
        h("a_NSML[0].Neurite2 syn_NCXLS_M3L_NSML_Acetylcholine[0] = new Acetylcholine(0.0848879)")
        h("a_M3L[0].Axon a_NSML[0].synlist.append(new NetCon(&v(0.35355204), syn_NCXLS_M3L_NSML_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3L_I2R
        print("Adding projection: NCXLS_M3L_I2R, from M3L to I2R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_I2R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3L_I2R_Acetylcholine[1]")

        # Connection 6: cell 0, seg 2 (0.11881792) [0.050843813 on a_M3L[0].Axon] -> cell 0, seg 4 (0.11752625) [0.5345269 on a_I2R[0].Axon], weight: 1.0, delay 0.0
        h("a_I2R[0].Axon syn_NCXLS_M3L_I2R_Acetylcholine[0] = new Acetylcholine(0.5345269)")
        h("a_M3L[0].Axon a_I2R[0].synlist.append(new NetCon(&v(0.050843813), syn_NCXLS_M3L_I2R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3L_M2L
        print("Adding projection: NCXLS_M3L_M2L, from M3L to M2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_M2L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3L_M2L_Acetylcholine[1]")

        # Connection 7: cell 0, seg 9 (0.7460449) [0.8065086 on a_M3L[0].Neurite3] -> cell 0, seg 7 (0.5833688) [0.76291794 on a_M2L[0].Axon], weight: 1.0, delay 0.0
        h("a_M2L[0].Axon syn_NCXLS_M3L_M2L_Acetylcholine[0] = new Acetylcholine(0.76291794)")
        h("a_M3L[0].Neurite3 a_M2L[0].synlist.append(new NetCon(&v(0.8065086), syn_NCXLS_M3L_M2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3L_I4
        print("Adding projection: NCXLS_M3L_I4, from M3L to I4 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_I4_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3L_I4_Acetylcholine[1]")

        # Connection 8: cell 0, seg 9 (0.08289132) [0.30124414 on a_M3L[0].Neurite3] -> cell 0, seg 1 (0.52837014) [0.014436671 on a_I4[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I4[0].Dendrite2 syn_NCXLS_M3L_I4_Acetylcholine[0] = new Acetylcholine(0.014436671)")
        h("a_M3L[0].Neurite3 a_I4[0].synlist.append(new NetCon(&v(0.30124414), syn_NCXLS_M3L_I4_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3L_M2R
        print("Adding projection: NCXLS_M3L_M2R, from M3L to M2R with synapse Glutamate, 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_M2R_Glutamate[1]")

        h("objectvar netConn_NCXLS_M3L_M2R_Glutamate[1]")

        # Connection 9: cell 0, seg 5 (0.80210924) [0.08805697 on a_M3L[0].Neurite2] -> cell 0, seg 6 (0.9779007) [0.75173736 on a_M2R[0].Axon], weight: 1.0, delay 0.0
        h("a_M2R[0].Axon syn_NCXLS_M3L_M2R_Glutamate[0] = new Glutamate(0.75173736)")
        h("a_M3L[0].Neurite2 a_M2R[0].synlist.append(new NetCon(&v(0.08805697), syn_NCXLS_M3L_M2R_Glutamate[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_I1R_I1L
        print("Adding projection: NCXLS_I1R_I1L, from I1R to I1L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_I1R_I1L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_I1R_I1L_Acetylcholine[1]")

        # Connection 10: cell 0, seg 5 (0.92464334) [0.2917193 on a_I1R[0].Axon] -> cell 0, seg 6 (0.9191157) [0.3306549 on a_I1L[0].Axon], weight: 1.0, delay 0.0
        h("a_I1L[0].Axon syn_NCXLS_I1R_I1L_Acetylcholine[0] = new Acetylcholine(0.3306549)")
        h("a_I1R[0].Axon a_I1L[0].synlist.append(new NetCon(&v(0.2917193), syn_NCXLS_I1R_I1L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M4_MCR
        print("Adding projection: NCXLS_M4_MCR, from M4 to MCR with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M4_MCR_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M4_MCR_Acetylcholine[1]")

        # Connection 11: cell 0, seg 4 (0.69541115) [0.011607354 on a_M4[0].Dendrite3] -> cell 0, seg 3 (0.07543455) [0.22922805 on a_MCR[0].Axon], weight: 1.0, delay 0.0
        h("a_MCR[0].Axon syn_NCXLS_M4_MCR_Acetylcholine[0] = new Acetylcholine(0.22922805)")
        h("a_M4[0].Dendrite3 a_MCR[0].synlist.append(new NetCon(&v(0.011607354), syn_NCXLS_M4_MCR_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M4_I1R
        print("Adding projection: NCXLS_M4_I1R, from M4 to I1R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M4_I1R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M4_I1R_Acetylcholine[1]")

        # Connection 12: cell 0, seg 9 (0.6957487) [0.16344756 on a_M4[0].Dendrite3] -> cell 0, seg 1 (0.45454106) [0.014161016 on a_I1R[0].Axon], weight: 1.0, delay 0.0
        h("a_I1R[0].Axon syn_NCXLS_M4_I1R_Acetylcholine[0] = new Acetylcholine(0.014161016)")
        h("a_M4[0].Dendrite3 a_I1R[0].synlist.append(new NetCon(&v(0.16344756), syn_NCXLS_M4_I1R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M4_I2L
        print("Adding projection: NCXLS_M4_I2L, from M4 to I2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M4_I2L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M4_I2L_Acetylcholine[1]")

        # Connection 13: cell 0, seg 5 (0.5843143) [0.035816114 on a_M4[0].Dendrite3] -> cell 0, seg 6 (0.90115803) [0.5844688 on a_I2L[0].Axon], weight: 1.0, delay 0.0
        h("a_I2L[0].Axon syn_NCXLS_M4_I2L_Acetylcholine[0] = new Acetylcholine(0.5844688)")
        h("a_M4[0].Dendrite3 a_I2L[0].synlist.append(new NetCon(&v(0.035816114), syn_NCXLS_M4_I2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M4_I1L
        print("Adding projection: NCXLS_M4_I1L, from M4 to I1L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M4_I1L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M4_I1L_Acetylcholine[1]")

        # Connection 14: cell 0, seg 9 (0.3945218) [0.15501896 on a_M4[0].Dendrite3] -> cell 0, seg 8 (0.10675607) [0.37774625 on a_I1L[0].Axon], weight: 1.0, delay 0.0
        h("a_I1L[0].Axon syn_NCXLS_M4_I1L_Acetylcholine[0] = new Acetylcholine(0.37774625)")
        h("a_M4[0].Dendrite3 a_I1L[0].synlist.append(new NetCon(&v(0.15501896), syn_NCXLS_M4_I1L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M4_I3
        print("Adding projection: NCXLS_M4_I3, from M4 to I3 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M4_I3_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M4_I3_Acetylcholine[1]")

        # Connection 15: cell 0, seg 5 (0.16967991) [0.022245023 on a_M4[0].Dendrite3] -> cell 0, seg 8 (0.6468484) [0.13220929 on a_I3[0].Axon], weight: 1.0, delay 0.0
        h("a_I3[0].Axon syn_NCXLS_M4_I3_Acetylcholine[0] = new Acetylcholine(0.13220929)")
        h("a_M4[0].Dendrite3 a_I3[0].synlist.append(new NetCon(&v(0.022245023), syn_NCXLS_M4_I3_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M4_I2R
        print("Adding projection: NCXLS_M4_I2R, from M4 to I2R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M4_I2R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M4_I2R_Acetylcholine[1]")

        # Connection 16: cell 0, seg 8 (0.26593792) [0.11908155 on a_M4[0].Dendrite3] -> cell 0, seg 2 (0.3603451) [0.05584497 on a_I2R[0].Axon], weight: 1.0, delay 0.0
        h("a_I2R[0].Axon syn_NCXLS_M4_I2R_Acetylcholine[0] = new Acetylcholine(0.05584497)")
        h("a_M4[0].Dendrite3 a_I2R[0].synlist.append(new NetCon(&v(0.11908155), syn_NCXLS_M4_I2R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_I5_M2L
        print("Adding projection: NCXLS_I5_M2L, from I5 to M2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_I5_M2L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_I5_M2L_Acetylcholine[1]")

        # Connection 17: cell 0, seg 4 (0.03231595) [2.6503205E-4 on a_I5[0].Neurite2] -> cell 0, seg 6 (0.27976352) [0.63747394 on a_M2L[0].Axon], weight: 1.0, delay 0.0
        h("a_M2L[0].Axon syn_NCXLS_I5_M2L_Acetylcholine[0] = new Acetylcholine(0.63747394)")
        h("a_I5[0].Neurite2 a_M2L[0].synlist.append(new NetCon(&v(2.6503205E-4), syn_NCXLS_I5_M2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_MCL_I6
        print("Adding projection: NCXLS_MCL_I6, from MCL to I6 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_MCL_I6_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_MCL_I6_Acetylcholine[1]")

        # Connection 18: cell 0, seg 5 (0.6027819) [0.41433862 on a_MCL[0].Axon] -> cell 0, seg 4 (0.27095765) [0.40723222 on a_I6[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I6[0].Dendrite2 syn_NCXLS_MCL_I6_Acetylcholine[0] = new Acetylcholine(0.40723222)")
        h("a_MCL[0].Axon a_I6[0].synlist.append(new NetCon(&v(0.41433862), syn_NCXLS_MCL_I6_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_MCL_I1L
        print("Adding projection: NCXLS_MCL_I1L, from MCL to I1L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_MCL_I1L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_MCL_I1L_Acetylcholine[1]")

        # Connection 19: cell 0, seg 3 (0.9497999) [0.32916304 on a_MCL[0].Axon] -> cell 0, seg 6 (0.7257195) [0.32265723 on a_I1L[0].Axon], weight: 1.0, delay 0.0
        h("a_I1L[0].Axon syn_NCXLS_MCL_I1L_Acetylcholine[0] = new Acetylcholine(0.32265723)")
        h("a_MCL[0].Axon a_I1L[0].synlist.append(new NetCon(&v(0.32916304), syn_NCXLS_MCL_I1L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3R_I5
        print("Adding projection: NCXLS_M3R_I5, from M3R to I5 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3R_I5_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3R_I5_Acetylcholine[1]")

        # Connection 20: cell 0, seg 9 (0.08274842) [0.30113527 on a_M3R[0].Neurite3] -> cell 0, seg 2 (0.8766615) [0.5440009 on a_I5[0].Axon], weight: 1.0, delay 0.0
        h("a_I5[0].Axon syn_NCXLS_M3R_I5_Acetylcholine[0] = new Acetylcholine(0.5440009)")
        h("a_M3R[0].Neurite3 a_I5[0].synlist.append(new NetCon(&v(0.30113527), syn_NCXLS_M3R_I5_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3R_MCL
        print("Adding projection: NCXLS_M3R_MCL, from M3R to MCL with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3R_MCL_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3R_MCL_Acetylcholine[1]")

        # Connection 21: cell 0, seg 5 (0.41125512) [0.04508146 on a_M3R[0].Neurite2] -> cell 0, seg 7 (0.77760226) [0.65657043 on a_MCL[0].Axon], weight: 1.0, delay 0.0
        h("a_MCL[0].Axon syn_NCXLS_M3R_MCL_Acetylcholine[0] = new Acetylcholine(0.65657043)")
        h("a_M3R[0].Neurite2 a_MCL[0].synlist.append(new NetCon(&v(0.04508146), syn_NCXLS_M3R_MCL_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3R_I6
        print("Adding projection: NCXLS_M3R_I6, from M3R to I6 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3R_I6_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3R_I6_Acetylcholine[1]")

        # Connection 22: cell 0, seg 2 (0.37673897) [0.09546199 on a_M3R[0].Axon] -> cell 0, seg 1 (0.7495783) [0.035176612 on a_I6[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I6[0].Dendrite2 syn_NCXLS_M3R_I6_Acetylcholine[0] = new Acetylcholine(0.035176612)")
        h("a_M3R[0].Axon a_I6[0].synlist.append(new NetCon(&v(0.09546199), syn_NCXLS_M3R_I6_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3R_M5
        print("Adding projection: NCXLS_M3R_M5, from M3R to M5 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3R_M5_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3R_M5_Acetylcholine[1]")

        # Connection 23: cell 0, seg 9 (0.8291642) [0.8698382 on a_M3R[0].Neurite3] -> cell 0, seg 6 (0.5690815) [0.39441422 on a_M5[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_M5[0].Dendrite2 syn_NCXLS_M3R_M5_Acetylcholine[0] = new Acetylcholine(0.39441422)")
        h("a_M3R[0].Neurite3 a_M5[0].synlist.append(new NetCon(&v(0.8698382), syn_NCXLS_M3R_M5_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3R_NSMR
        print("Adding projection: NCXLS_M3R_NSMR, from M3R to NSMR with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M3R_NSMR_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M3R_NSMR_Acetylcholine[1]")

        # Connection 24: cell 0, seg 1 (0.03682187) [0.0011167014 on a_M3R[0].Axon] -> cell 0, seg 2 (0.13385212) [0.14365451 on a_NSMR[0].Axon], weight: 1.0, delay 0.0
        h("a_NSMR[0].Axon syn_NCXLS_M3R_NSMR_Acetylcholine[0] = new Acetylcholine(0.14365451)")
        h("a_M3R[0].Axon a_NSMR[0].synlist.append(new NetCon(&v(0.0011167014), syn_NCXLS_M3R_NSMR_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M3R_M1
        print("Adding projection: NCXLS_M3R_M1, from M3R to M1 with synapse Glutamate, 1 connection(s)")

        h("objectvar syn_NCXLS_M3R_M1_Glutamate[1]")

        h("objectvar netConn_NCXLS_M3R_M1_Glutamate[1]")

        # Connection 25: cell 0, seg 5 (0.8647224) [0.094790176 on a_M3R[0].Neurite2] -> cell 0, seg 7 (0.812901) [0.79034054 on a_M1[0].Axon], weight: 1.0, delay 0.0
        h("a_M1[0].Axon syn_NCXLS_M3R_M1_Glutamate[0] = new Glutamate(0.79034054)")
        h("a_M3R[0].Neurite2 a_M1[0].synlist.append(new NetCon(&v(0.094790176), syn_NCXLS_M3R_M1_Glutamate[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M5_I5
        print("Adding projection: NCXLS_M5_I5, from M5 to I5 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M5_I5_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M5_I5_Acetylcholine[1]")

        # Connection 26: cell 0, seg 5 (0.91316575) [0.32217076 on a_M5[0].Dendrite2] -> cell 0, seg 6 (0.5851495) [0.1460326 on a_I5[0].Neurite2], weight: 1.0, delay 0.0
        h("a_I5[0].Neurite2 syn_NCXLS_M5_I5_Acetylcholine[0] = new Acetylcholine(0.1460326)")
        h("a_M5[0].Dendrite2 a_I5[0].synlist.append(new NetCon(&v(0.32217076), syn_NCXLS_M5_I5_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M5_M2L
        print("Adding projection: NCXLS_M5_M2L, from M5 to M2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M5_M2L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M5_M2L_Acetylcholine[1]")

        # Connection 27: cell 0, seg 5 (0.7570812) [0.3138034 on a_M5[0].Dendrite2] -> cell 0, seg 5 (0.37785056) [0.5449112 on a_M2L[0].Axon], weight: 1.0, delay 0.0
        h("a_M2L[0].Axon syn_NCXLS_M5_M2L_Acetylcholine[0] = new Acetylcholine(0.5449112)")
        h("a_M5[0].Dendrite2 a_M2L[0].synlist.append(new NetCon(&v(0.3138034), syn_NCXLS_M5_M2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_MCR
        print("Adding projection: NCXLS_M2L_MCR, from M2L to MCR with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_MCR_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_MCR_Acetylcholine[1]")

        # Connection 28: cell 0, seg 5 (0.12915942) [0.52616966 on a_M2L[0].Axon] -> cell 0, seg 9 (0.954051) [0.9117268 on a_MCR[0].Axon], weight: 1.0, delay 0.0
        h("a_MCR[0].Axon syn_NCXLS_M2L_MCR_Acetylcholine[0] = new Acetylcholine(0.9117268)")
        h("a_M2L[0].Axon a_MCR[0].synlist.append(new NetCon(&v(0.52616966), syn_NCXLS_M2L_MCR_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_I1R
        print("Adding projection: NCXLS_M2L_I1R, from M2L to I1R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_I1R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_I1R_Acetylcholine[1]")

        # Connection 29: cell 0, seg 4 (0.67170066) [0.37912658 on a_M2L[0].Axon] -> cell 0, seg 1 (0.61812824) [0.019257499 on a_I1R[0].Axon], weight: 1.0, delay 0.0
        h("a_I1R[0].Axon syn_NCXLS_M2L_I1R_Acetylcholine[0] = new Acetylcholine(0.019257499)")
        h("a_M2L[0].Axon a_I1R[0].synlist.append(new NetCon(&v(0.37912658), syn_NCXLS_M2L_I1R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_I2L
        print("Adding projection: NCXLS_M2L_I2L, from M2L to I2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_I2L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_I2L_Acetylcholine[1]")

        # Connection 30: cell 0, seg 8 (0.6715732) [0.7806894 on a_M2L[0].Axon] -> cell 0, seg 7 (0.5203077) [0.6001629 on a_I2L[0].Axon], weight: 1.0, delay 0.0
        h("a_I2L[0].Axon syn_NCXLS_M2L_I2L_Acetylcholine[0] = new Acetylcholine(0.6001629)")
        h("a_M2L[0].Axon a_I2L[0].synlist.append(new NetCon(&v(0.7806894), syn_NCXLS_M2L_I2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_I5
        print("Adding projection: NCXLS_M2L_I5, from M2L to I5 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_I5_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_I5_Acetylcholine[1]")

        # Connection 31: cell 0, seg 6 (0.5201635) [0.676724 on a_M2L[0].Axon] -> cell 0, seg 3 (0.8521815) [0.9349136 on a_I5[0].Axon], weight: 1.0, delay 0.0
        h("a_I5[0].Axon syn_NCXLS_M2L_I5_Acetylcholine[0] = new Acetylcholine(0.9349136)")
        h("a_M2L[0].Axon a_I5[0].synlist.append(new NetCon(&v(0.676724), syn_NCXLS_M2L_I5_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_MCL
        print("Adding projection: NCXLS_M2L_MCL, from M2L to MCL with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_MCL_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_MCL_Acetylcholine[1]")

        # Connection 32: cell 0, seg 6 (0.088408224) [0.60623133 on a_M2L[0].Axon] -> cell 0, seg 5 (0.79181784) [0.42923167 on a_MCL[0].Axon], weight: 1.0, delay 0.0
        h("a_MCL[0].Axon syn_NCXLS_M2L_MCL_Acetylcholine[0] = new Acetylcholine(0.42923167)")
        h("a_M2L[0].Axon a_MCL[0].synlist.append(new NetCon(&v(0.60623133), syn_NCXLS_M2L_MCL_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_M3R
        print("Adding projection: NCXLS_M2L_M3R, from M2L to M3R with synapse Glutamate, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_M3R_Glutamate[1]")

        h("objectvar netConn_NCXLS_M2L_M3R_Glutamate[1]")

        # Connection 33: cell 0, seg 1 (0.75513726) [6.5072795E-4 on a_M2L[0].Axon] -> cell 0, seg 7 (0.62030953) [0.73923916 on a_M3R[0].Neurite2], weight: 1.0, delay 0.0
        h("a_M3R[0].Neurite2 syn_NCXLS_M2L_M3R_Glutamate[0] = new Glutamate(0.73923916)")
        h("a_M2L[0].Axon a_M3R[0].synlist.append(new NetCon(&v(6.5072795E-4), syn_NCXLS_M2L_M3R_Glutamate[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_I6
        print("Adding projection: NCXLS_M2L_I6, from M2L to I6 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_I6_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_I6_Acetylcholine[1]")

        # Connection 34: cell 0, seg 2 (0.90315104) [0.019455543 on a_M2L[0].Axon] -> cell 0, seg 3 (0.61726373) [0.18466131 on a_I6[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I6[0].Dendrite2 syn_NCXLS_M2L_I6_Acetylcholine[0] = new Acetylcholine(0.18466131)")
        h("a_M2L[0].Axon a_I6[0].synlist.append(new NetCon(&v(0.019455543), syn_NCXLS_M2L_I6_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_I1L
        print("Adding projection: NCXLS_M2L_I1L, from M2L to I1L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_I1L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_I1L_Acetylcholine[1]")

        # Connection 35: cell 0, seg 2 (0.60808784) [0.013380868 on a_M2L[0].Axon] -> cell 0, seg 6 (0.6366443) [0.31897363 on a_I1L[0].Axon], weight: 1.0, delay 0.0
        h("a_I1L[0].Axon syn_NCXLS_M2L_I1L_Acetylcholine[0] = new Acetylcholine(0.31897363)")
        h("a_M2L[0].Axon a_I1L[0].synlist.append(new NetCon(&v(0.013380868), syn_NCXLS_M2L_I1L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_I3
        print("Adding projection: NCXLS_M2L_I3, from M2L to I3 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_I3_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_I3_Acetylcholine[1]")

        # Connection 36: cell 0, seg 3 (0.34825546) [0.04817519 on a_M2L[0].Axon] -> cell 0, seg 2 (0.5139895) [0.053884495 on a_I3[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I3[0].Dendrite2 syn_NCXLS_M2L_I3_Acetylcholine[0] = new Acetylcholine(0.053884495)")
        h("a_M2L[0].Axon a_I3[0].synlist.append(new NetCon(&v(0.04817519), syn_NCXLS_M2L_I3_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_MI
        print("Adding projection: NCXLS_M2L_MI, from M2L to MI with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_MI_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_MI_Acetylcholine[1]")

        # Connection 37: cell 0, seg 8 (0.52360225) [0.7780092 on a_M2L[0].Axon] -> cell 0, seg 7 (0.69764185) [0.37136188 on a_MI[0].Axon], weight: 1.0, delay 0.0
        h("a_MI[0].Axon syn_NCXLS_M2L_MI_Acetylcholine[0] = new Acetylcholine(0.37136188)")
        h("a_M2L[0].Axon a_MI[0].synlist.append(new NetCon(&v(0.7780092), syn_NCXLS_M2L_MI_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_NSML
        print("Adding projection: NCXLS_M2L_NSML, from M2L to NSML with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_NSML_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_NSML_Acetylcholine[1]")

        # Connection 38: cell 0, seg 4 (0.84209144) [0.45039162 on a_M2L[0].Axon] -> cell 0, seg 8 (0.76891774) [0.1476485 on a_NSML[0].Neurite2], weight: 1.0, delay 0.0
        h("a_NSML[0].Neurite2 syn_NCXLS_M2L_NSML_Acetylcholine[0] = new Acetylcholine(0.1476485)")
        h("a_M2L[0].Axon a_NSML[0].synlist.append(new NetCon(&v(0.45039162), syn_NCXLS_M2L_NSML_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_I2R
        print("Adding projection: NCXLS_M2L_I2R, from M2L to I2R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_I2R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_I2R_Acetylcholine[1]")

        # Connection 39: cell 0, seg 4 (0.045861267) [0.117372476 on a_M2L[0].Axon] -> cell 0, seg 8 (0.6208057) [0.630739 on a_I2R[0].Axon], weight: 1.0, delay 0.0
        h("a_I2R[0].Axon syn_NCXLS_M2L_I2R_Acetylcholine[0] = new Acetylcholine(0.630739)")
        h("a_M2L[0].Axon a_I2R[0].synlist.append(new NetCon(&v(0.117372476), syn_NCXLS_M2L_I2R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_NSMR
        print("Adding projection: NCXLS_M2L_NSMR, from M2L to NSMR with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_NSMR_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_NSMR_Acetylcholine[1]")

        # Connection 40: cell 0, seg 2 (0.5372634) [0.011922755 on a_M2L[0].Axon] -> cell 0, seg 3 (0.46011916) [0.0027103904 on a_NSMR[0].Neurite2], weight: 1.0, delay 0.0
        h("a_NSMR[0].Neurite2 syn_NCXLS_M2L_NSMR_Acetylcholine[0] = new Acetylcholine(0.0027103904)")
        h("a_M2L[0].Axon a_NSMR[0].synlist.append(new NetCon(&v(0.011922755), syn_NCXLS_M2L_NSMR_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_I4
        print("Adding projection: NCXLS_M2L_I4, from M2L to I4 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_I4_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_I4_Acetylcholine[1]")

        # Connection 41: cell 0, seg 6 (0.18006727) [0.6211965 on a_M2L[0].Axon] -> cell 0, seg 8 (0.6965015) [0.2600439 on a_I4[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I4[0].Dendrite2 syn_NCXLS_M2L_I4_Acetylcholine[0] = new Acetylcholine(0.2600439)")
        h("a_M2L[0].Axon a_I4[0].synlist.append(new NetCon(&v(0.6211965), syn_NCXLS_M2L_I4_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2L_M1
        print("Adding projection: NCXLS_M2L_M1, from M2L to M1 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_M1_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2L_M1_Acetylcholine[1]")

        # Connection 42: cell 0, seg 9 (0.8743176) [0.8124484 on a_M2L[0].Axon] -> cell 0, seg 3 (0.5152361) [0.01541384 on a_M1[0].Axon], weight: 1.0, delay 0.0
        h("a_M1[0].Axon syn_NCXLS_M2L_M1_Acetylcholine[0] = new Acetylcholine(0.01541384)")
        h("a_M2L[0].Axon a_M1[0].synlist.append(new NetCon(&v(0.8124484), syn_NCXLS_M2L_M1_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_I4_M2L
        print("Adding projection: NCXLS_I4_M2L, from I4 to M2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_I4_M2L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_I4_M2L_Acetylcholine[1]")

        # Connection 43: cell 0, seg 2 (0.040868618) [0.02816839 on a_I4[0].Dendrite2] -> cell 0, seg 3 (0.16893506) [0.034413822 on a_M2L[0].Axon], weight: 1.0, delay 0.0
        h("a_M2L[0].Axon syn_NCXLS_I4_M2L_Acetylcholine[0] = new Acetylcholine(0.034413822)")
        h("a_I4[0].Dendrite2 a_M2L[0].synlist.append(new NetCon(&v(0.02816839), syn_NCXLS_I4_M2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2R_MCR
        print("Adding projection: NCXLS_M2R_MCR, from M2R to MCR with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2R_MCR_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2R_MCR_Acetylcholine[1]")

        # Connection 44: cell 0, seg 6 (0.5487153) [0.6816633 on a_M2R[0].Axon] -> cell 0, seg 5 (0.53442353) [0.40830484 on a_MCR[0].Axon], weight: 1.0, delay 0.0
        h("a_MCR[0].Axon syn_NCXLS_M2R_MCR_Acetylcholine[0] = new Acetylcholine(0.40830484)")
        h("a_M2R[0].Axon a_MCR[0].synlist.append(new NetCon(&v(0.6816633), syn_NCXLS_M2R_MCR_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2R_I1R
        print("Adding projection: NCXLS_M2R_I1R, from M2R to I1R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2R_I1R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2R_I1R_Acetylcholine[1]")

        # Connection 45: cell 0, seg 2 (0.50341725) [0.011361338 on a_M2R[0].Axon] -> cell 0, seg 1 (0.6903948) [0.02150893 on a_I1R[0].Axon], weight: 1.0, delay 0.0
        h("a_I1R[0].Axon syn_NCXLS_M2R_I1R_Acetylcholine[0] = new Acetylcholine(0.02150893)")
        h("a_M2R[0].Axon a_I1R[0].synlist.append(new NetCon(&v(0.011361338), syn_NCXLS_M2R_I1R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2R_M4
        print("Adding projection: NCXLS_M2R_M4, from M2R to M4 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2R_M4_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2R_M4_Acetylcholine[1]")

        # Connection 46: cell 0, seg 9 (0.48114538) [0.8010178 on a_M2R[0].Axon] -> cell 0, seg 9 (0.68778473) [0.16322471 on a_M4[0].Dendrite3], weight: 1.0, delay 0.0
        h("a_M4[0].Dendrite3 syn_NCXLS_M2R_M4_Acetylcholine[0] = new Acetylcholine(0.16322471)")
        h("a_M2R[0].Axon a_M4[0].synlist.append(new NetCon(&v(0.8010178), syn_NCXLS_M2R_M4_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2R_I2L
        print("Adding projection: NCXLS_M2R_I2L, from M2R to I2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2R_I2L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2R_I2L_Acetylcholine[1]")

        # Connection 47: cell 0, seg 8 (0.27687764) [0.77381897 on a_M2R[0].Axon] -> cell 0, seg 1 (0.8062013) [0.02773499 on a_I2L[0].Axon], weight: 1.0, delay 0.0
        h("a_I2L[0].Axon syn_NCXLS_M2R_I2L_Acetylcholine[0] = new Acetylcholine(0.02773499)")
        h("a_M2R[0].Axon a_I2L[0].synlist.append(new NetCon(&v(0.77381897), syn_NCXLS_M2R_I2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2R_I1L
        print("Adding projection: NCXLS_M2R_I1L, from M2R to I1L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2R_I1L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2R_I1L_Acetylcholine[1]")

        # Connection 48: cell 0, seg 1 (0.18452102) [1.5901025E-4 on a_M2R[0].Axon] -> cell 0, seg 3 (0.20934932) [0.109155536 on a_I1L[0].Axon], weight: 1.0, delay 0.0
        h("a_I1L[0].Axon syn_NCXLS_M2R_I1L_Acetylcholine[0] = new Acetylcholine(0.109155536)")
        h("a_M2R[0].Axon a_I1L[0].synlist.append(new NetCon(&v(1.5901025E-4), syn_NCXLS_M2R_I1L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2R_I3
        print("Adding projection: NCXLS_M2R_I3, from M2R to I3 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2R_I3_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2R_I3_Acetylcholine[1]")

        # Connection 49: cell 0, seg 8 (0.23611653) [0.77308065 on a_M2R[0].Axon] -> cell 0, seg 6 (0.7599554) [0.9649752 on a_I3[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I3[0].Dendrite2 syn_NCXLS_M2R_I3_Acetylcholine[0] = new Acetylcholine(0.9649752)")
        h("a_M2R[0].Axon a_I3[0].synlist.append(new NetCon(&v(0.77308065), syn_NCXLS_M2R_I3_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2R_MI
        print("Adding projection: NCXLS_M2R_MI, from M2R to MI with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2R_MI_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2R_MI_Acetylcholine[1]")

        # Connection 50: cell 0, seg 8 (0.7474709) [0.7823431 on a_M2R[0].Axon] -> cell 0, seg 2 (0.0366832) [0.0065433243 on a_MI[0].Axon], weight: 1.0, delay 0.0
        h("a_MI[0].Axon syn_NCXLS_M2R_MI_Acetylcholine[0] = new Acetylcholine(0.0065433243)")
        h("a_M2R[0].Axon a_MI[0].synlist.append(new NetCon(&v(0.7823431), syn_NCXLS_M2R_MI_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M2R_I2R
        print("Adding projection: NCXLS_M2R_I2R, from M2R to I2R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M2R_I2R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M2R_I2R_Acetylcholine[1]")

        # Connection 51: cell 0, seg 8 (0.7133496) [0.78172505 on a_M2R[0].Axon] -> cell 0, seg 3 (0.8952068) [0.48723844 on a_I2R[0].Axon], weight: 1.0, delay 0.0
        h("a_I2R[0].Axon syn_NCXLS_M2R_I2R_Acetylcholine[0] = new Acetylcholine(0.48723844)")
        h("a_M2R[0].Axon a_I2R[0].synlist.append(new NetCon(&v(0.78172505), syn_NCXLS_M2R_I2R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_MCR
        print("Adding projection: NCXLS_M1_MCR, from M1 to MCR with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_MCR_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_MCR_Acetylcholine[1]")

        # Connection 52: cell 0, seg 2 (0.5326173) [0.0047348193 on a_M1[0].Axon] -> cell 0, seg 6 (0.2424705) [0.47360572 on a_MCR[0].Axon], weight: 1.0, delay 0.0
        h("a_MCR[0].Axon syn_NCXLS_M1_MCR_Acetylcholine[0] = new Acetylcholine(0.47360572)")
        h("a_M1[0].Axon a_MCR[0].synlist.append(new NetCon(&v(0.0047348193), syn_NCXLS_M1_MCR_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_M3L
        print("Adding projection: NCXLS_M1_M3L, from M1 to M3L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_M3L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_M3L_Acetylcholine[1]")

        # Connection 53: cell 0, seg 9 (0.37728417) [0.044594742 on a_M1[0].Neurite2] -> cell 0, seg 7 (0.020071197) [0.32601413 on a_M3L[0].Neurite2], weight: 1.0, delay 0.0
        h("a_M3L[0].Neurite2 syn_NCXLS_M1_M3L_Acetylcholine[0] = new Acetylcholine(0.32601413)")
        h("a_M1[0].Neurite2 a_M3L[0].synlist.append(new NetCon(&v(0.044594742), syn_NCXLS_M1_M3L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_I1R
        print("Adding projection: NCXLS_M1_I1R, from M1 to I1R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_I1R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_I1R_Acetylcholine[1]")

        # Connection 54: cell 0, seg 9 (0.21144801) [0.024993017 on a_M1[0].Neurite2] -> cell 0, seg 1 (0.32749736) [0.010203028 on a_I1R[0].Axon], weight: 1.0, delay 0.0
        h("a_I1R[0].Axon syn_NCXLS_M1_I1R_Acetylcholine[0] = new Acetylcholine(0.010203028)")
        h("a_M1[0].Neurite2 a_I1R[0].synlist.append(new NetCon(&v(0.024993017), syn_NCXLS_M1_I1R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_M4
        print("Adding projection: NCXLS_M1_M4, from M1 to M4 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_M4_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_M4_Acetylcholine[1]")

        # Connection 55: cell 0, seg 9 (0.34292686) [0.040533733 on a_M1[0].Neurite2] -> cell 0, seg 1 (0.47396994) [0.10779922 on a_M4[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_M4[0].Dendrite2 syn_NCXLS_M1_M4_Acetylcholine[0] = new Acetylcholine(0.10779922)")
        h("a_M1[0].Neurite2 a_M4[0].synlist.append(new NetCon(&v(0.040533733), syn_NCXLS_M1_M4_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_I2L
        print("Adding projection: NCXLS_M1_I2L, from M1 to I2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_I2L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_I2L_Acetylcholine[1]")

        # Connection 56: cell 0, seg 3 (0.4984422) [0.015169205 on a_M1[0].Axon] -> cell 0, seg 9 (0.08692029) [0.6454645 on a_I2L[0].Axon], weight: 1.0, delay 0.0
        h("a_I2L[0].Axon syn_NCXLS_M1_I2L_Acetylcholine[0] = new Acetylcholine(0.6454645)")
        h("a_M1[0].Axon a_I2L[0].synlist.append(new NetCon(&v(0.015169205), syn_NCXLS_M1_I2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_I5
        print("Adding projection: NCXLS_M1_I5, from M1 to I5 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_I5_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_I5_Acetylcholine[1]")

        # Connection 57: cell 0, seg 6 (0.55774224) [0.3939406 on a_M1[0].Axon] -> cell 0, seg 2 (0.58653545) [0.5071028 on a_I5[0].Axon], weight: 1.0, delay 0.0
        h("a_I5[0].Axon syn_NCXLS_M1_I5_Acetylcholine[0] = new Acetylcholine(0.5071028)")
        h("a_M1[0].Axon a_I5[0].synlist.append(new NetCon(&v(0.3939406), syn_NCXLS_M1_I5_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_MCL
        print("Adding projection: NCXLS_M1_MCL, from M1 to MCL with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_MCL_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_MCL_Acetylcholine[1]")

        # Connection 58: cell 0, seg 3 (0.33744684) [0.012823994 on a_M1[0].Axon] -> cell 0, seg 9 (0.8996474) [0.90544343 on a_MCL[0].Axon], weight: 1.0, delay 0.0
        h("a_MCL[0].Axon syn_NCXLS_M1_MCL_Acetylcholine[0] = new Acetylcholine(0.90544343)")
        h("a_M1[0].Axon a_MCL[0].synlist.append(new NetCon(&v(0.012823994), syn_NCXLS_M1_MCL_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_M3R
        print("Adding projection: NCXLS_M1_M3R, from M1 to M3R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_M3R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_M3R_Acetylcholine[1]")

        # Connection 59: cell 0, seg 2 (0.49824768) [0.0045014443 on a_M1[0].Axon] -> cell 0, seg 8 (0.3303485) [0.0786521 on a_M3R[0].Neurite3], weight: 1.0, delay 0.0
        h("a_M3R[0].Neurite3 syn_NCXLS_M1_M3R_Acetylcholine[0] = new Acetylcholine(0.0786521)")
        h("a_M1[0].Axon a_M3R[0].synlist.append(new NetCon(&v(0.0045014443), syn_NCXLS_M1_M3R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_I1L
        print("Adding projection: NCXLS_M1_I1L, from M1 to I1L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_I1L_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_I1L_Acetylcholine[1]")

        # Connection 60: cell 0, seg 9 (0.0075343633) [8.9055684E-4 on a_M1[0].Neurite2] -> cell 0, seg 1 (0.2253328) [0.0070202737 on a_I1L[0].Axon], weight: 1.0, delay 0.0
        h("a_I1L[0].Axon syn_NCXLS_M1_I1L_Acetylcholine[0] = new Acetylcholine(0.0070202737)")
        h("a_M1[0].Neurite2 a_I1L[0].synlist.append(new NetCon(&v(8.9055684E-4), syn_NCXLS_M1_I1L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_I3
        print("Adding projection: NCXLS_M1_I3, from M1 to I3 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_I3_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_I3_Acetylcholine[1]")

        # Connection 61: cell 0, seg 6 (0.4878098) [0.3821941 on a_M1[0].Axon] -> cell 0, seg 7 (0.8508175) [0.99800587 on a_I3[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I3[0].Dendrite2 syn_NCXLS_M1_I3_Acetylcholine[0] = new Acetylcholine(0.99800587)")
        h("a_M1[0].Axon a_I3[0].synlist.append(new NetCon(&v(0.3821941), syn_NCXLS_M1_I3_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_MI
        print("Adding projection: NCXLS_M1_MI, from M1 to MI with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_MI_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_MI_Acetylcholine[1]")

        # Connection 62: cell 0, seg 8 (0.84231406) [0.97863024 on a_M1[0].Axon] -> cell 0, seg 7 (0.051635478) [0.33248106 on a_MI[0].Axon], weight: 1.0, delay 0.0
        h("a_MI[0].Axon syn_NCXLS_M1_MI_Acetylcholine[0] = new Acetylcholine(0.33248106)")
        h("a_M1[0].Axon a_MI[0].synlist.append(new NetCon(&v(0.97863024), syn_NCXLS_M1_MI_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_NSML
        print("Adding projection: NCXLS_M1_NSML, from M1 to NSML with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_NSML_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_NSML_Acetylcholine[1]")

        # Connection 63: cell 0, seg 8 (0.9823786) [0.99761194 on a_M1[0].Axon] -> cell 0, seg 5 (0.1120389) [0.016399678 on a_NSML[0].Neurite2], weight: 1.0, delay 0.0
        h("a_NSML[0].Neurite2 syn_NCXLS_M1_NSML_Acetylcholine[0] = new Acetylcholine(0.016399678)")
        h("a_M1[0].Axon a_NSML[0].synlist.append(new NetCon(&v(0.99761194), syn_NCXLS_M1_NSML_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_I2R
        print("Adding projection: NCXLS_M1_I2R, from M1 to I2R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_I2R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_I2R_Acetylcholine[1]")

        # Connection 64: cell 0, seg 2 (0.96947044) [0.007701123 on a_M1[0].Axon] -> cell 0, seg 4 (0.8655071) [0.5424531 on a_I2R[0].Axon], weight: 1.0, delay 0.0
        h("a_I2R[0].Axon syn_NCXLS_M1_I2R_Acetylcholine[0] = new Acetylcholine(0.5424531)")
        h("a_M1[0].Axon a_I2R[0].synlist.append(new NetCon(&v(0.007701123), syn_NCXLS_M1_I2R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_NSMR
        print("Adding projection: NCXLS_M1_NSMR, from M1 to NSMR with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_NSMR_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_NSMR_Acetylcholine[1]")

        # Connection 65: cell 0, seg 6 (0.25790283) [0.3435768 on a_M1[0].Axon] -> cell 0, seg 6 (0.17088759) [0.04462341 on a_NSMR[0].Neurite2], weight: 1.0, delay 0.0
        h("a_NSMR[0].Neurite2 syn_NCXLS_M1_NSMR_Acetylcholine[0] = new Acetylcholine(0.04462341)")
        h("a_M1[0].Axon a_NSMR[0].synlist.append(new NetCon(&v(0.3435768), syn_NCXLS_M1_NSMR_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_I4
        print("Adding projection: NCXLS_M1_I4, from M1 to I4 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_I4_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_I4_Acetylcholine[1]")

        # Connection 66: cell 0, seg 3 (0.7184573) [0.018374152 on a_M1[0].Axon] -> cell 0, seg 9 (0.53503674) [0.52514637 on a_I4[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I4[0].Dendrite2 syn_NCXLS_M1_I4_Acetylcholine[0] = new Acetylcholine(0.52514637)")
        h("a_M1[0].Axon a_I4[0].synlist.append(new NetCon(&v(0.018374152), syn_NCXLS_M1_I4_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NCXLS_M1_M2R
        print("Adding projection: NCXLS_M1_M2R, from M1 to M2R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NCXLS_M1_M2R_Acetylcholine[1]")

        h("objectvar netConn_NCXLS_M1_M2R_Acetylcholine[1]")

        # Connection 67: cell 0, seg 3 (0.18704374) [0.01063308 on a_M1[0].Axon] -> cell 0, seg 5 (0.32367924) [0.54110456 on a_M2R[0].Axon], weight: 1.0, delay 0.0
        h("a_M2R[0].Axon syn_NCXLS_M1_M2R_Acetylcholine[0] = new Acetylcholine(0.54110456)")
        h("a_M1[0].Axon a_M2R[0].synlist.append(new NetCon(&v(0.01063308), syn_NCXLS_M1_M2R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I1L_RMDDL
        print("Adding projection: NC_I1L_RMDDL, from I1L to RMDDL with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_I1L_RMDDL_Acetylcholine[1]")

        h("objectvar netConn_NC_I1L_RMDDL_Acetylcholine[1]")

        # Connection 68: cell 0, seg 3 (0.5076104) [0.17056303 on a_I1L[0].Axon] -> cell 0, seg 4 (0.24240974) [0.13262127 on a_RMDDL[0].Axon], weight: 1.0, delay 0.0
        h("a_RMDDL[0].Axon syn_NC_I1L_RMDDL_Acetylcholine[0] = new Acetylcholine(0.13262127)")
        h("a_I1L[0].Axon a_RMDDL[0].synlist.append(new NetCon(&v(0.17056303), syn_NC_I1L_RMDDL_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I1L_RMDVL
        print("Adding projection: NC_I1L_RMDVL, from I1L to RMDVL with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_I1L_RMDVL_Acetylcholine[1]")

        h("objectvar netConn_NC_I1L_RMDVL_Acetylcholine[1]")

        # Connection 69: cell 0, seg 1 (0.5812382) [0.018108556 on a_I1L[0].Axon] -> cell 0, seg 6 (0.15436271) [0.24163646 on a_RMDVL[0].Axon], weight: 1.0, delay 0.0
        h("a_RMDVL[0].Axon syn_NC_I1L_RMDVL_Acetylcholine[0] = new Acetylcholine(0.24163646)")
        h("a_I1L[0].Axon a_RMDVL[0].synlist.append(new NetCon(&v(0.018108556), syn_NC_I1L_RMDVL_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I1R_RMDDR
        print("Adding projection: NC_I1R_RMDDR, from I1R to RMDDR with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_I1R_RMDDR_Acetylcholine[1]")

        h("objectvar netConn_NC_I1R_RMDDR_Acetylcholine[1]")

        # Connection 70: cell 0, seg 4 (0.051823538) [0.2723672 on a_I1R[0].Axon] -> cell 0, seg 3 (0.33660427) [0.08426745 on a_RMDDR[0].Axon], weight: 1.0, delay 0.0
        h("a_RMDDR[0].Axon syn_NC_I1R_RMDDR_Acetylcholine[0] = new Acetylcholine(0.08426745)")
        h("a_I1R[0].Axon a_RMDDR[0].synlist.append(new NetCon(&v(0.2723672), syn_NC_I1R_RMDDR_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I1R_RMDVR
        print("Adding projection: NC_I1R_RMDVR, from I1R to RMDVR with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_I1R_RMDVR_Acetylcholine[1]")

        h("objectvar netConn_NC_I1R_RMDVR_Acetylcholine[1]")

        # Connection 71: cell 0, seg 5 (0.548922) [0.28722075 on a_I1R[0].Axon] -> cell 0, seg 7 (0.20173046) [0.31755793 on a_RMDVR[0].Axon], weight: 1.0, delay 0.0
        h("a_RMDVR[0].Axon syn_NC_I1R_RMDVR_Acetylcholine[0] = new Acetylcholine(0.31755793)")
        h("a_I1R[0].Axon a_RMDVR[0].synlist.append(new NetCon(&v(0.28722075), syn_NC_I1R_RMDVR_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I2L_URXL
        print("Adding projection: NC_I2L_URXL, from I2L to URXL with synapse Glutamate, 1 connection(s)")

        h("objectvar syn_NC_I2L_URXL_Glutamate[1]")

        h("objectvar netConn_NC_I2L_URXL_Glutamate[1]")

        # Connection 72: cell 0, seg 8 (0.08786811) [0.6144411 on a_I2L[0].Axon] -> cell 0, seg 2 (0.13882478) [0.0119062 on a_URXL[0].Axon], weight: 1.0, delay 0.0
        h("a_URXL[0].Axon syn_NC_I2L_URXL_Glutamate[0] = new Glutamate(0.0119062)")
        h("a_I2L[0].Axon a_URXL[0].synlist.append(new NetCon(&v(0.6144411), syn_NC_I2L_URXL_Glutamate[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I2R_URXR
        print("Adding projection: NC_I2R_URXR, from I2R to URXR with synapse Glutamate, 1 connection(s)")

        h("objectvar syn_NC_I2R_URXR_Glutamate[1]")

        h("objectvar netConn_NC_I2R_URXR_Glutamate[1]")

        # Connection 73: cell 0, seg 9 (0.11669607) [0.6466077 on a_I2R[0].Axon] -> cell 0, seg 1 (0.4731662) [0.05752073 on a_URXR[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_URXR[0].Dendrite2 syn_NC_I2R_URXR_Glutamate[0] = new Glutamate(0.05752073)")
        h("a_I2R[0].Axon a_URXR[0].synlist.append(new NetCon(&v(0.6466077), syn_NC_I2R_URXR_Glutamate[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_I1L
        print("Adding projection: NC_AVKL_I1L, from AVKL to I1L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_AVKL_I1L_Acetylcholine[1]")

        h("objectvar netConn_NC_AVKL_I1L_Acetylcholine[1]")

        # Connection 74: cell 0, seg 6 (0.79428947) [0.52083427 on a_AVKL[0].Dendrite3] -> cell 0, seg 7 (0.10669925) [0.33831957 on a_I1L[0].Axon], weight: 1.0, delay 0.0
        h("a_I1L[0].Axon syn_NC_AVKL_I1L_Acetylcholine[0] = new Acetylcholine(0.33831957)")
        h("a_AVKL[0].Dendrite3 a_I1L[0].synlist.append(new NetCon(&v(0.52083427), syn_NC_AVKL_I1L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKR_I1R
        print("Adding projection: NC_AVKR_I1R, from AVKR to I1R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_AVKR_I1R_Acetylcholine[1]")

        h("objectvar netConn_NC_AVKR_I1R_Acetylcholine[1]")

        # Connection 75: cell 0, seg 5 (0.124297224) [0.22809021 on a_AVKR[0].Dendrite3] -> cell 0, seg 2 (0.73086745) [0.056646455 on a_I1R[0].Axon], weight: 1.0, delay 0.0
        h("a_I1R[0].Axon syn_NC_AVKR_I1R_Acetylcholine[0] = new Acetylcholine(0.056646455)")
        h("a_AVKR[0].Dendrite3 a_I1R[0].synlist.append(new NetCon(&v(0.22809021), syn_NC_AVKR_I1R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_I1L
        print("Adding projection: NC_RIS_I1L, from RIS to I1L with synapse Glutamate, 1 connection(s)")

        h("objectvar syn_NC_RIS_I1L_Glutamate[1]")

        h("objectvar netConn_NC_RIS_I1L_Glutamate[1]")

        # Connection 76: cell 0, seg 9 (0.18123306) [0.7293285 on a_RIS[0].Axon] -> cell 0, seg 2 (0.06649627) [0.033475757 on a_I1L[0].Axon], weight: 1.0, delay 0.0
        h("a_I1L[0].Axon syn_NC_RIS_I1L_Glutamate[0] = new Glutamate(0.033475757)")
        h("a_RIS[0].Axon a_I1L[0].synlist.append(new NetCon(&v(0.7293285), syn_NC_RIS_I1L_Glutamate[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_I1R
        print("Adding projection: NC_RIS_I1R, from RIS to I1R with synapse Glutamate, 1 connection(s)")

        h("objectvar syn_NC_RIS_I1R_Glutamate[1]")

        h("objectvar netConn_NC_RIS_I1R_Glutamate[1]")

        # Connection 77: cell 0, seg 8 (0.048094645) [0.67489606 on a_RIS[0].Axon] -> cell 0, seg 6 (0.78151447) [0.3249488 on a_I1R[0].Axon], weight: 1.0, delay 0.0
        h("a_I1R[0].Axon syn_NC_RIS_I1R_Glutamate[0] = new Glutamate(0.3249488)")
        h("a_RIS[0].Axon a_I1R[0].synlist.append(new NetCon(&v(0.67489606), syn_NC_RIS_I1R_Glutamate[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_I2L
        print("Adding projection: NC_AVAL_I2L, from AVAL to I2L with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_AVAL_I2L_Acetylcholine[1]")

        h("objectvar netConn_NC_AVAL_I2L_Acetylcholine[1]")

        # Connection 78: cell 0, seg 9 (0.20162731) [0.04026738 on a_AVAL[0].Dendrite2] -> cell 0, seg 5 (0.16365594) [0.5458811 on a_I2L[0].Axon], weight: 1.0, delay 0.0
        h("a_I2L[0].Axon syn_NC_AVAL_I2L_Acetylcholine[0] = new Acetylcholine(0.5458811)")
        h("a_AVAL[0].Dendrite2 a_I2L[0].synlist.append(new NetCon(&v(0.04026738), syn_NC_AVAL_I2L_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_I2R
        print("Adding projection: NC_AVAR_I2R, from AVAR to I2R with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_AVAR_I2R_Acetylcholine[1]")

        h("objectvar netConn_NC_AVAR_I2R_Acetylcholine[1]")

        # Connection 79: cell 0, seg 5 (0.8145747) [0.6134806 on a_AVAR[0].Dendrite3] -> cell 0, seg 5 (0.6651972) [0.551939 on a_I2R[0].Axon], weight: 1.0, delay 0.0
        h("a_I2R[0].Axon syn_NC_AVAR_I2R_Acetylcholine[0] = new Acetylcholine(0.551939)")
        h("a_AVAR[0].Dendrite3 a_I2R[0].synlist.append(new NetCon(&v(0.6134806), syn_NC_AVAR_I2R_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMBVL_I4
        print("Adding projection: NC_SMBVL_I4, from SMBVL to I4 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_SMBVL_I4_Acetylcholine[1]")

        h("objectvar netConn_NC_SMBVL_I4_Acetylcholine[1]")

        # Connection 80: cell 0, seg 4 (0.87720054) [0.004000826 on a_SMBVL[0].Axon] -> cell 0, seg 9 (0.39244512) [0.46839058 on a_I4[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I4[0].Dendrite2 syn_NC_SMBVL_I4_Acetylcholine[0] = new Acetylcholine(0.46839058)")
        h("a_SMBVL[0].Axon a_I4[0].synlist.append(new NetCon(&v(0.004000826), syn_NC_SMBVL_I4_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMBVR_I4
        print("Adding projection: NC_SMBVR_I4, from SMBVR to I4 with synapse Acetylcholine, 1 connection(s)")

        h("objectvar syn_NC_SMBVR_I4_Acetylcholine[1]")

        h("objectvar netConn_NC_SMBVR_I4_Acetylcholine[1]")

        # Connection 81: cell 0, seg 8 (0.4391349) [0.017673017 on a_SMBVR[0].Axon] -> cell 0, seg 8 (0.37694442) [0.20514333 on a_I4[0].Dendrite2], weight: 1.0, delay 0.0
        h("a_I4[0].Dendrite2 syn_NC_SMBVR_I4_Acetylcholine[0] = new Acetylcholine(0.20514333)")
        h("a_SMBVR[0].Axon a_I4[0].synlist.append(new NetCon(&v(0.017673017), syn_NC_SMBVR_I4_Acetylcholine[0], 0.0, 0.0, 1.0))") # *->cell

        # ######################   Electrical Projection: NCXLS_M3L_M4_GJ
        print("Adding electrical projection: NCXLS_M3L_M4_GJ from M3L to M4, with 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_M4_GJ_Generic_GJ_A[1]")
        h("objectvar syn_NCXLS_M3L_M4_GJ_Generic_GJ_B[1]")

        # Elect Connection 82: cell 0, seg 3 (0.53978103) [0.3900243 on a_M3L[0].Axon] -> cell 0, seg 6 (0.43874466) [0.062285554 on a_M4[0].Dendrite3], weight: 1.0
        h("a_M3L[0].Axon { syn_NCXLS_M3L_M4_GJ_Generic_GJ_A[0] = new Generic_GJ(0.3900243) }")
        h("a_M4[0].Dendrite3 { syn_NCXLS_M3L_M4_GJ_Generic_GJ_B[0] = new Generic_GJ(0.062285554) }")
        h("setpointer syn_NCXLS_M3L_M4_GJ_Generic_GJ_A[0].vpeer, a_M4[0].Dendrite3.v(0.062285554)")
        h("setpointer syn_NCXLS_M3L_M4_GJ_Generic_GJ_B[0].vpeer, a_M3L[0].Axon.v(0.3900243)")

        # ######################   Electrical Projection: NCXLS_M3L_M1_GJ
        print("Adding electrical projection: NCXLS_M3L_M1_GJ from M3L to M1, with 1 connection(s)")

        h("objectvar syn_NCXLS_M3L_M1_GJ_Generic_GJ_A[1]")
        h("objectvar syn_NCXLS_M3L_M1_GJ_Generic_GJ_B[1]")

        # Elect Connection 83: cell 0, seg 1 (0.35536245) [0.010771645 on a_M3L[0].Axon] -> cell 0, seg 9 (0.3914821) [0.04627293 on a_M1[0].Neurite2], weight: 1.0
        h("a_M3L[0].Axon { syn_NCXLS_M3L_M1_GJ_Generic_GJ_A[0] = new Generic_GJ(0.010771645) }")
        h("a_M1[0].Neurite2 { syn_NCXLS_M3L_M1_GJ_Generic_GJ_B[0] = new Generic_GJ(0.04627293) }")
        h("setpointer syn_NCXLS_M3L_M1_GJ_Generic_GJ_A[0].vpeer, a_M1[0].Neurite2.v(0.04627293)")
        h("setpointer syn_NCXLS_M3L_M1_GJ_Generic_GJ_B[0].vpeer, a_M3L[0].Axon.v(0.010771645)")

        # ######################   Electrical Projection: NCXLS_I5_I4_GJ
        print("Adding electrical projection: NCXLS_I5_I4_GJ from I5 to I4, with 1 connection(s)")

        h("objectvar syn_NCXLS_I5_I4_GJ_Generic_GJ_A[1]")
        h("objectvar syn_NCXLS_I5_I4_GJ_Generic_GJ_B[1]")

        # Elect Connection 84: cell 0, seg 2 (0.9064721) [0.5477922 on a_I5[0].Axon] -> cell 0, seg 5 (0.624238) [0.11393634 on a_I4[0].Dendrite2], weight: 1.0
        h("a_I5[0].Axon { syn_NCXLS_I5_I4_GJ_Generic_GJ_A[0] = new Generic_GJ(0.5477922) }")
        h("a_I4[0].Dendrite2 { syn_NCXLS_I5_I4_GJ_Generic_GJ_B[0] = new Generic_GJ(0.11393634) }")
        h("setpointer syn_NCXLS_I5_I4_GJ_Generic_GJ_A[0].vpeer, a_I4[0].Dendrite2.v(0.11393634)")
        h("setpointer syn_NCXLS_I5_I4_GJ_Generic_GJ_B[0].vpeer, a_I5[0].Axon.v(0.5477922)")

        # ######################   Electrical Projection: NCXLS_M3R_M3L_GJ
        print("Adding electrical projection: NCXLS_M3R_M3L_GJ from M3R to M3L, with 1 connection(s)")

        h("objectvar syn_NCXLS_M3R_M3L_GJ_Generic_GJ_A[1]")
        h("objectvar syn_NCXLS_M3R_M3L_GJ_Generic_GJ_B[1]")

        # Elect Connection 85: cell 0, seg 3 (0.93983215) [0.5288194 on a_M3R[0].Axon] -> cell 0, seg 6 (0.6277081) [0.23684719 on a_M3L[0].Neurite2], weight: 1.0
        h("a_M3R[0].Axon { syn_NCXLS_M3R_M3L_GJ_Generic_GJ_A[0] = new Generic_GJ(0.5288194) }")
        h("a_M3L[0].Neurite2 { syn_NCXLS_M3R_M3L_GJ_Generic_GJ_B[0] = new Generic_GJ(0.23684719) }")
        h("setpointer syn_NCXLS_M3R_M3L_GJ_Generic_GJ_A[0].vpeer, a_M3L[0].Neurite2.v(0.23684719)")
        h("setpointer syn_NCXLS_M3R_M3L_GJ_Generic_GJ_B[0].vpeer, a_M3R[0].Axon.v(0.5288194)")

        # ######################   Electrical Projection: NCXLS_M2L_M3L_GJ
        print("Adding electrical projection: NCXLS_M2L_M3L_GJ from M2L to M3L, with 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_M3L_GJ_Generic_GJ_A[1]")
        h("objectvar syn_NCXLS_M2L_M3L_GJ_Generic_GJ_B[1]")

        # Elect Connection 86: cell 0, seg 8 (0.7940252) [0.7829074 on a_M2L[0].Axon] -> cell 0, seg 4 (0.6200728) [0.8287987 on a_M3L[0].Axon], weight: 1.0
        h("a_M2L[0].Axon { syn_NCXLS_M2L_M3L_GJ_Generic_GJ_A[0] = new Generic_GJ(0.7829074) }")
        h("a_M3L[0].Axon { syn_NCXLS_M2L_M3L_GJ_Generic_GJ_B[0] = new Generic_GJ(0.8287987) }")
        h("setpointer syn_NCXLS_M2L_M3L_GJ_Generic_GJ_A[0].vpeer, a_M3L[0].Axon.v(0.8287987)")
        h("setpointer syn_NCXLS_M2L_M3L_GJ_Generic_GJ_B[0].vpeer, a_M2L[0].Axon.v(0.7829074)")

        # ######################   Electrical Projection: NCXLS_M2L_M5_GJ
        print("Adding electrical projection: NCXLS_M2L_M5_GJ from M2L to M5, with 1 connection(s)")

        h("objectvar syn_NCXLS_M2L_M5_GJ_Generic_GJ_A[1]")
        h("objectvar syn_NCXLS_M2L_M5_GJ_Generic_GJ_B[1]")

        # Elect Connection 87: cell 0, seg 4 (0.5731509) [0.33790863 on a_M2L[0].Axon] -> cell 0, seg 7 (0.99769264) [0.50385344 on a_M5[0].Dendrite2], weight: 1.0
        h("a_M2L[0].Axon { syn_NCXLS_M2L_M5_GJ_Generic_GJ_A[0] = new Generic_GJ(0.33790863) }")
        h("a_M5[0].Dendrite2 { syn_NCXLS_M2L_M5_GJ_Generic_GJ_B[0] = new Generic_GJ(0.50385344) }")
        h("setpointer syn_NCXLS_M2L_M5_GJ_Generic_GJ_A[0].vpeer, a_M5[0].Dendrite2.v(0.50385344)")
        h("setpointer syn_NCXLS_M2L_M5_GJ_Generic_GJ_B[0].vpeer, a_M2L[0].Axon.v(0.33790863)")

        # ######################   Electrical Projection: NCXLS_M2R_M3R_GJ
        print("Adding electrical projection: NCXLS_M2R_M3R_GJ from M2R to M3R, with 1 connection(s)")

        h("objectvar syn_NCXLS_M2R_M3R_GJ_Generic_GJ_A[1]")
        h("objectvar syn_NCXLS_M2R_M3R_GJ_Generic_GJ_B[1]")

        # Elect Connection 88: cell 0, seg 9 (0.70698047) [0.80763614 on a_M2R[0].Axon] -> cell 0, seg 1 (0.77857196) [0.02361185 on a_M3R[0].Axon], weight: 1.0
        h("a_M2R[0].Axon { syn_NCXLS_M2R_M3R_GJ_Generic_GJ_A[0] = new Generic_GJ(0.80763614) }")
        h("a_M3R[0].Axon { syn_NCXLS_M2R_M3R_GJ_Generic_GJ_B[0] = new Generic_GJ(0.02361185) }")
        h("setpointer syn_NCXLS_M2R_M3R_GJ_Generic_GJ_A[0].vpeer, a_M3R[0].Axon.v(0.02361185)")
        h("setpointer syn_NCXLS_M2R_M3R_GJ_Generic_GJ_B[0].vpeer, a_M2R[0].Axon.v(0.80763614)")

        trec = h.Vector()
        trec.record(h._ref_t)

        h.tstop = tstop

        if self.abs_tol is not None and self.rel_tol is not None:
            cvode = h.CVode()
            cvode.active(1)
            cvode.atol(self.abs_tol)
            cvode.rtol(self.rel_tol)
        else:
            h.dt = dt
            h.steps_per_ms = 1/h.dt

        # ######################   Display: self.display_display_voltages
        self.display_display_voltages = h.Graph(0)
        self.display_display_voltages.size(0,h.tstop,-80.0,50.0)
        self.display_display_voltages.view(0, -80.0, h.tstop, 130.0, 80, 330, 330, 250)
        h.graphList[0].append(self.display_display_voltages)
        # Line, plotting: M1/0/M1/v
        self.display_display_voltages.addexpr("a_M1[0].Soma.v(0.5)", "a_M1[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: M2L/0/M2L/v
        self.display_display_voltages.addexpr("a_M2L[0].Soma.v(0.5)", "a_M2L[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: M2R/0/M2R/v
        self.display_display_voltages.addexpr("a_M2R[0].Soma.v(0.5)", "a_M2R[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: M3L/0/M3L/v
        self.display_display_voltages.addexpr("a_M3L[0].Soma.v(0.5)", "a_M3L[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: M3R/0/M3R/v
        self.display_display_voltages.addexpr("a_M3R[0].Soma.v(0.5)", "a_M3R[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: M4/0/M4/v
        self.display_display_voltages.addexpr("a_M4[0].Soma.v(0.5)", "a_M4[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: M5/0/M5/v
        self.display_display_voltages.addexpr("a_M5[0].Soma.v(0.5)", "a_M5[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)



        # ######################   File to save: gvft_network_bio_prior_lamW_0.144_DF_0.019_t20_voltages.dat (output_voltages)
        # Column: M1/0/M1/v
        h(' objectvar v_M1_v_output_voltages ')
        h(' { v_M1_v_output_voltages = new Vector() } ')
        h(' { v_M1_v_output_voltages.record(&a_M1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M1_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M2L/0/M2L/v
        h(' objectvar v_M2L_v_output_voltages ')
        h(' { v_M2L_v_output_voltages = new Vector() } ')
        h(' { v_M2L_v_output_voltages.record(&a_M2L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M2L_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M2R/0/M2R/v
        h(' objectvar v_M2R_v_output_voltages ')
        h(' { v_M2R_v_output_voltages = new Vector() } ')
        h(' { v_M2R_v_output_voltages.record(&a_M2R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M2R_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M3L/0/M3L/v
        h(' objectvar v_M3L_v_output_voltages ')
        h(' { v_M3L_v_output_voltages = new Vector() } ')
        h(' { v_M3L_v_output_voltages.record(&a_M3L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M3L_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M3R/0/M3R/v
        h(' objectvar v_M3R_v_output_voltages ')
        h(' { v_M3R_v_output_voltages = new Vector() } ')
        h(' { v_M3R_v_output_voltages.record(&a_M3R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M3R_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M4/0/M4/v
        h(' objectvar v_M4_v_output_voltages ')
        h(' { v_M4_v_output_voltages = new Vector() } ')
        h(' { v_M4_v_output_voltages.record(&a_M4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M4_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M5/0/M5/v
        h(' objectvar v_M5_v_output_voltages ')
        h(' { v_M5_v_output_voltages = new Vector() } ')
        h(' { v_M5_v_output_voltages.record(&a_M5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M5_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I1L/0/I1L/v
        h(' objectvar v_I1L_v_output_voltages ')
        h(' { v_I1L_v_output_voltages = new Vector() } ')
        h(' { v_I1L_v_output_voltages.record(&a_I1L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I1L_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I1R/0/I1R/v
        h(' objectvar v_I1R_v_output_voltages ')
        h(' { v_I1R_v_output_voltages = new Vector() } ')
        h(' { v_I1R_v_output_voltages.record(&a_I1R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I1R_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I2L/0/I2L/v
        h(' objectvar v_I2L_v_output_voltages ')
        h(' { v_I2L_v_output_voltages = new Vector() } ')
        h(' { v_I2L_v_output_voltages.record(&a_I2L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I2L_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I2R/0/I2R/v
        h(' objectvar v_I2R_v_output_voltages ')
        h(' { v_I2R_v_output_voltages = new Vector() } ')
        h(' { v_I2R_v_output_voltages.record(&a_I2R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I2R_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I3/0/I3/v
        h(' objectvar v_I3_v_output_voltages ')
        h(' { v_I3_v_output_voltages = new Vector() } ')
        h(' { v_I3_v_output_voltages.record(&a_I3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I3_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I4/0/I4/v
        h(' objectvar v_I4_v_output_voltages ')
        h(' { v_I4_v_output_voltages = new Vector() } ')
        h(' { v_I4_v_output_voltages.record(&a_I4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I4_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I5/0/I5/v
        h(' objectvar v_I5_v_output_voltages ')
        h(' { v_I5_v_output_voltages = new Vector() } ')
        h(' { v_I5_v_output_voltages.record(&a_I5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I5_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I6/0/I6/v
        h(' objectvar v_I6_v_output_voltages ')
        h(' { v_I6_v_output_voltages = new Vector() } ')
        h(' { v_I6_v_output_voltages.record(&a_I6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I6_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: MI/0/MI/v
        h(' objectvar v_MI_v_output_voltages ')
        h(' { v_MI_v_output_voltages = new Vector() } ')
        h(' { v_MI_v_output_voltages.record(&a_MI[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_MI_v_output_voltages.resize((h.tstop * h.steps_per_ms) + 1)

        # ######################   File to save: time.dat (time)
        # Column: time
        h(' objectvar v_time ')
        h(' { v_time = new Vector() } ')
        h(' { v_time.record(&t) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_time.resize((h.tstop * h.steps_per_ms) + 1)

        self.initialized = False

        self.sim_end = -1 # will be overwritten

        setup_end = time.time()
        self.setup_time = setup_end - self.setup_start
        print("Setting up the network to simulate took %f seconds"%(self.setup_time))

        h.nrncontrolmenu()


    def run(self):

        self.initialized = True
        sim_start = time.time()
        if self.abs_tol is not None and self.rel_tol is not None:
            print("Running a simulation of %sms (cvode abs_tol = %sms, rel_tol = %sms; seed=%s)" % (h.tstop, self.abs_tol, self.rel_tol, self.seed))
        else:
            print("Running a simulation of %sms (dt = %sms; seed=%s)" % (h.tstop, h.dt, self.seed))

        try:
            h.run()
        except Exception as e:
            print("Exception running NEURON: %s" % (e))
            return


        self.sim_end = time.time()
        self.sim_time = self.sim_end - sim_start
        print("Finished NEURON simulation in %f seconds (%f mins)..."%(self.sim_time, self.sim_time/60.0))

        try:
            self.save_results()
        except Exception as e:
            print("Exception saving results of NEURON simulation: %s" % (e))
            return


    def advance(self):

        if not self.initialized:
            h.finitialize()
            self.initialized = True

        h.fadvance()


    ###############################################################################
    # Hash function to use in generation of random value
    # This is copied from NetPyNE: https://github.com/Neurosim-lab/netpyne/blob/master/netpyne/simFuncs.py
    ###############################################################################
    def _id32 (self,obj): 
        return int(hashlib.md5(obj.encode('utf-8')).hexdigest()[0:8],16)  # convert 8 first chars of md5 hash in base 16 to int


    ###############################################################################
    # Initialize the stim randomizer
    # This is copied from NetPyNE: https://github.com/Neurosim-lab/netpyne/blob/master/netpyne/simFuncs.py
    ###############################################################################
    def _init_stim_randomizer(self,rand, stimType, gid, seed): 
        #print("INIT STIM  %s; %s; %s; %s"%(rand, stimType, gid, seed))
        rand.Random123(self._id32(stimType), gid, seed)


    def save_results(self):

        print("Saving results at t=%s..."%h.t)

        if self.sim_end < 0: self.sim_end = time.time()

        self.display_display_voltages.exec_menu("View = plot")

        # ######################   File to save: time.dat (time). Note, saving in SI units
        py_v_time = [ t/1000 for t in h.v_time.to_python() ]  # Convert to Python list for speed...

        f_time_f2 = open('time.dat', 'w')
        num_points = len(py_v_time)  # Simulation may have been stopped before tstop...

        for i in range(num_points):
            f_time_f2.write('%f'% py_v_time[i])  # Save in SI units...
        f_time_f2.close()
        print("Saved data to: time.dat")

        # ######################   File to save: gvft_network_bio_prior_lamW_0.144_DF_0.019_t20_voltages.dat (output_voltages). Note, saving in SI units
        py_v_M1_v_output_voltages = [ float(x  / 1000.0) for x in h.v_M1_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M2L_v_output_voltages = [ float(x  / 1000.0) for x in h.v_M2L_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M2R_v_output_voltages = [ float(x  / 1000.0) for x in h.v_M2R_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M3L_v_output_voltages = [ float(x  / 1000.0) for x in h.v_M3L_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M3R_v_output_voltages = [ float(x  / 1000.0) for x in h.v_M3R_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M4_v_output_voltages = [ float(x  / 1000.0) for x in h.v_M4_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M5_v_output_voltages = [ float(x  / 1000.0) for x in h.v_M5_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I1L_v_output_voltages = [ float(x  / 1000.0) for x in h.v_I1L_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I1R_v_output_voltages = [ float(x  / 1000.0) for x in h.v_I1R_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I2L_v_output_voltages = [ float(x  / 1000.0) for x in h.v_I2L_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I2R_v_output_voltages = [ float(x  / 1000.0) for x in h.v_I2R_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I3_v_output_voltages = [ float(x  / 1000.0) for x in h.v_I3_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I4_v_output_voltages = [ float(x  / 1000.0) for x in h.v_I4_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I5_v_output_voltages = [ float(x  / 1000.0) for x in h.v_I5_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I6_v_output_voltages = [ float(x  / 1000.0) for x in h.v_I6_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_MI_v_output_voltages = [ float(x  / 1000.0) for x in h.v_MI_v_output_voltages.to_python() ]  # Convert to Python list for speed, variable has dim: voltage

        f_output_voltages_f2 = open('gvft_network_bio_prior_lamW_0.144_DF_0.019_t20_voltages.dat', 'w')
        num_points = len(py_v_time)  # Simulation may have been stopped before tstop...

        for i in range(num_points):
            f_output_voltages_f2.write('%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t\n' % (py_v_time[i], py_v_M1_v_output_voltages[i], py_v_M2L_v_output_voltages[i], py_v_M2R_v_output_voltages[i], py_v_M3L_v_output_voltages[i], py_v_M3R_v_output_voltages[i], py_v_M4_v_output_voltages[i], py_v_M5_v_output_voltages[i], py_v_I1L_v_output_voltages[i], py_v_I1R_v_output_voltages[i], py_v_I2L_v_output_voltages[i], py_v_I2R_v_output_voltages[i], py_v_I3_v_output_voltages[i], py_v_I4_v_output_voltages[i], py_v_I5_v_output_voltages[i], py_v_I6_v_output_voltages[i], py_v_MI_v_output_voltages[i], ))
        f_output_voltages_f2.close()
        print("Saved data to: gvft_network_bio_prior_lamW_0.144_DF_0.019_t20_voltages.dat")

        save_end = time.time()
        save_time = save_end - self.sim_end
        print("Finished saving results in %f seconds"%(save_time))

        print("Done")

if __name__ == '__main__':

    ns = NeuronSimulation(tstop=500.0, dt=0.025, seed=12345, abs_tol=None, rel_tol=None)

    ns.run()

